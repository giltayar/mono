apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{name}}
  name: {{name}}
spec:
  replicas: {{replicas}}
  selector:
    matchLabels:
      app: {{name}}
  strategy:
    rollingUpdate:
      maxSurge: 10%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{name}}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: worker-pool
                operator: Exists
      containers:
      - env:
        - name: FEATURE_FLAGS
          value: '{{featureFlags}}'
        - name: RANDOM_ENV_TO_FORCE_DEPLOY
          value: {{randomEnvToForceDeploy}}
        {{>global-env}}
        {{>cluster-env}}
        image: applitools/templatetemplate:{{version}}
        imagePullPolicy: IfNotPresent
        name: templatetemplate
        resources:
          limits:
            memory: 250Mi
          requests:
            memory: 250Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 5
