diff --git a/packages/carmbo/carmbo-app/package.json b/packages/carmbo/carmbo-app/package.json
index b1fc480..9b70a94 100644
--- a/packages/carmbo/carmbo-app/package.json
+++ b/packages/carmbo/carmbo-app/package.json
@@ -56,6 +56,7 @@
     "@fastify/request-context": "^6.2.1",
     "@fastify/static": "^8.2.0",
     "@giltayar/carmel-tools-academy-integration": "^4.0.0",
+    "@giltayar/carmel-tools-cardcom-integration": "^4.0.1",
     "@giltayar/carmel-tools-smoove-integration": "^4.1.4",
     "@giltayar/carmel-tools-whatsapp-integration": "^2.5.1",
     "@giltayar/functional-commons": "^2.1.0",
diff --git a/packages/carmbo/carmbo-app/pnpm-lock.yaml b/packages/carmbo/carmbo-app/pnpm-lock.yaml
index 52b2b2f..0e018f8 100644
--- a/packages/carmbo/carmbo-app/pnpm-lock.yaml
+++ b/packages/carmbo/carmbo-app/pnpm-lock.yaml
@@ -4,6 +4,9 @@ settings:
   autoInstallPeers: true
   excludeLinksFromLockfile: false
 
+overrides:
+  '@giltayar/carmel-tools-cardcom-integration': link:../../carmel-tools/cardcom-integration
+
 importers:
 
   .:
@@ -23,6 +26,9 @@ importers:
       '@giltayar/carmel-tools-academy-integration':
         specifier: ^4.0.0
         version: 4.0.0
+      '@giltayar/carmel-tools-cardcom-integration':
+        specifier: link:../../carmel-tools/cardcom-integration
+        version: link:../../carmel-tools/cardcom-integration
       '@giltayar/carmel-tools-smoove-integration':
         specifier: ^4.1.4
         version: 4.1.4
diff --git a/packages/carmbo/carmbo-app/pnpm-workspace.yaml b/packages/carmbo/carmbo-app/pnpm-workspace.yaml
index bb1cc60..b84646c 100644
--- a/packages/carmbo/carmbo-app/pnpm-workspace.yaml
+++ b/packages/carmbo/carmbo-app/pnpm-workspace.yaml
@@ -9,3 +9,6 @@ minimumReleaseAgeExclude:
 
 neverBuiltDependencies:
   - es5-ext
+
+overrides:
+  '@giltayar/carmel-tools-cardcom-integration': link:../../carmel-tools/cardcom-integration
diff --git a/packages/carmbo/carmbo-app/src/app/carmbo-app.ts b/packages/carmbo/carmbo-app/src/app/carmbo-app.ts
index 77244d4..5109f11 100644
--- a/packages/carmbo/carmbo-app/src/app/carmbo-app.ts
+++ b/packages/carmbo/carmbo-app/src/app/carmbo-app.ts
@@ -24,12 +24,14 @@ import type {
   SmooveIntegrationService,
 } from '@giltayar/carmel-tools-smoove-integration/service'
 import type {TEST_HookFunction} from '../commons/TEST_hooks.ts'
+import type {CardcomIntegrationService} from '@giltayar/carmel-tools-cardcom-integration/service'
 
 declare module '@fastify/request-context' {
   interface RequestContextData {
     academyIntegration: AcademyIntegrationService
     whatsappIntegration: WhatsAppIntegrationService
     smooveIntegration: SmooveIntegrationService
+    cardcomIntegration: CardcomIntegrationService
     logger: FastifyBaseLogger
     sql: Sql
     courses: AcademyCourse[] | undefined
@@ -42,7 +44,7 @@ declare module '@fastify/request-context' {
 
 export function makeApp({
   db: {database, host, port, username, password},
-  services: {academyIntegration, whatsappIntegration, smooveIntegration},
+  services: {academyIntegration, whatsappIntegration, smooveIntegration, cardcomIntegration},
   auth0,
   appBaseUrl,
   TEST_hooks,
@@ -52,6 +54,7 @@ export function makeApp({
     academyIntegration: AcademyIntegrationService
     whatsappIntegration: WhatsAppIntegrationService
     smooveIntegration: SmooveIntegrationService
+    cardcomIntegration: CardcomIntegrationService
   }
   auth0:
     | {
@@ -85,6 +88,7 @@ export function makeApp({
       academyIntegration,
       whatsappIntegration,
       smooveIntegration,
+      cardcomIntegration,
       courses: undefined,
       logger: request.log,
       whatsappGroups: undefined,
diff --git a/packages/carmbo/carmbo-app/src/app/index.ts b/packages/carmbo/carmbo-app/src/app/index.ts
index 0009c63..38b0eeb 100644
--- a/packages/carmbo/carmbo-app/src/app/index.ts
+++ b/packages/carmbo/carmbo-app/src/app/index.ts
@@ -11,6 +11,7 @@ import {TEST_seedSalesEvents} from '../domain/sales-event/model.ts'
 import {throw_} from '@giltayar/functional-commons'
 import {migrate} from '../sql/migration.ts'
 import {fileURLToPath} from 'node:url'
+import {createCardcomIntegrationService} from '@giltayar/carmel-tools-cardcom-integration/service'
 
 export const EnvironmentVariablesSchema = z.object({
   DB_DATABASE: z.string().default('carmbo'),
@@ -30,6 +31,9 @@ export const EnvironmentVariablesSchema = z.object({
   CARMBO_AUTH0_CLIENT_ID: z.string(),
   CARMBO_AUTH0_CLIENT_SECRET: z.string(),
   CARMBO_AUTH0_SESSION_SECRET: z.string(),
+  CARDCOM_API_KEY: z.string(),
+  CARDCOM_API_KEY_PASSWORD: z.string(),
+  CARDCOM_TERMINAL_NUMBER: z.coerce.number().default(150067),
 })
 
 const env = EnvironmentVariablesSchema.parse(
@@ -65,6 +69,11 @@ const {app, sql} = await makeApp({
       apiKey: env.SMOOVE_API_KEY,
       apiUrl: env.SMOOVE_API_URL,
     }),
+    cardcomIntegration: createCardcomIntegrationService({
+      apiKey: env.CARDCOM_API_KEY,
+      apiKeyPassword: env.CARDCOM_API_KEY_PASSWORD,
+      terminalNumber: env.CARDCOM_TERMINAL_NUMBER.toString(),
+    }),
   },
   auth0: env.FORCE_NO_AUTH
     ? undefined
diff --git a/packages/carmbo/carmbo-app/src/domain/sale/controller.ts b/packages/carmbo/carmbo-app/src/domain/sale/controller.ts
index cad440e..0f200c2 100644
--- a/packages/carmbo/carmbo-app/src/domain/sale/controller.ts
+++ b/packages/carmbo/carmbo-app/src/domain/sale/controller.ts
@@ -9,6 +9,7 @@ import {
   createSale as model_createSale,
   updateSale as model_updateSale,
   deleteSale as model_deleteSale,
+  createTaxInvoiceDocument as model_createTaxInvoiceDocument,
   type NewSale,
   type Sale,
 } from './model.ts'
@@ -23,7 +24,8 @@ import {
   renderStudentListPage,
   renderProductListPage,
 } from './view/list-searches.ts'
-import {exceptionToBanner} from '../../layout/banner.ts'
+import {renderInvoiceDocumentUrlLink} from './view/tax-invoice-document-url.ts'
+import {exceptionToBanner, exceptionToBannerHtml} from '../../layout/banner.ts'
 
 export async function showSaleCreate(
   sale: NewSale | undefined,
@@ -84,6 +86,7 @@ export async function dealWithCardcomOneTimeSale(
   const sql = requestContext.get('sql')!
   const academyIntegration = requestContext.get('academyIntegration')!
   const smooveIntegration = requestContext.get('smooveIntegration')!
+  const cardcomIntegration = requestContext.get('cardcomIntegration')!
 
   await handleCardcomOneTimeSale(
     salesEventNumber,
@@ -91,6 +94,7 @@ export async function dealWithCardcomOneTimeSale(
     now,
     academyIntegration,
     smooveIntegration,
+    cardcomIntegration,
     sql,
   )
 
@@ -202,3 +206,31 @@ export async function deleteSale(
     )
   }
 }
+
+export async function createTaxInvoiceDocument(
+  saleNumber: number,
+  description: string,
+): Promise<ControllerResult> {
+  try {
+    const sql = requestContext.get('sql')!
+    const cardcomIntegration = requestContext.get('cardcomIntegration')!
+
+    const {url} = await model_createTaxInvoiceDocument(
+      saleNumber,
+      description,
+      new Date(),
+      sql,
+      cardcomIntegration,
+    )
+
+    return renderInvoiceDocumentUrlLink(url)
+  } catch (err) {
+    const logger = requestContext.get('logger')!
+    logger.error({err}, 'create-tax-invoice-document')
+
+    return retarget(
+      exceptionToBannerHtml('Error creating tax invoice document: ', err),
+      '#banner-container',
+    )
+  }
+}
diff --git a/packages/carmbo/carmbo-app/src/domain/sale/model-cardcom-sale.ts b/packages/carmbo/carmbo-app/src/domain/sale/model-cardcom-sale.ts
index 23123b9..08760ec 100644
--- a/packages/carmbo/carmbo-app/src/domain/sale/model-cardcom-sale.ts
+++ b/packages/carmbo/carmbo-app/src/domain/sale/model-cardcom-sale.ts
@@ -6,6 +6,7 @@ import retry from 'p-retry'
 import z from 'zod'
 import {normalizeEmail} from '../../commons/email.ts'
 import {normalizePhoneNumber} from '../../commons/phone.ts'
+import type {CardcomIntegrationService} from '@giltayar/carmel-tools-cardcom-integration/service'
 
 export const CardcomSaleWebhookJsonSchema = z.looseObject({
   ApprovelNumber: z.string(),
@@ -67,6 +68,7 @@ export async function handleCardcomOneTimeSale(
   now: Date,
   academyIntegration: AcademyIntegrationService,
   smooveIntegration: SmooveIntegrationService,
+  cardcomIntegration: CardcomIntegrationService,
   sql: Sql,
 ) {
   const student = await sql.begin(async (sql) => {
@@ -87,10 +89,15 @@ export async function handleCardcomOneTimeSale(
       student ??
       (await createStudentFromCardcomSale(cardcomSaleWebhookJson, now, smooveIntegration, sql))
 
+    const {url} = await cardcomIntegration.createTaxInvoiceDocumentUrl(
+      cardcomSaleWebhookJson.invoicenumber,
+    )
+
     const saleNumber = await createSale(
       finalStudent.studentNumber,
       salesEventNumber,
       cardcomSaleWebhookJson,
+      url,
       now,
       sql,
     )
@@ -268,6 +275,7 @@ async function createSale(
   studentNumber: number,
   salesEventNumber: number,
   cardcomSaleWebhookJson: CardcomSaleWebhookJson,
+  invoiceDocumentUrl: string,
   now: Date,
   sql: Sql,
 ): Promise<number> {
@@ -345,6 +353,7 @@ async function createSale(
         ${cardcomSaleWebhookJson.CouponNumber ?? null},
         ${parseInt(cardcomSaleWebhookJson.internaldealnumber)},
         ${cardcomSaleWebhookJson.RecurringAccountID ? parseInt(cardcomSaleWebhookJson.RecurringAccountID) : null}
+        ${invoiceDocumentUrl}
       )
     `)
 
diff --git a/packages/carmbo/carmbo-app/src/domain/sale/model.ts b/packages/carmbo/carmbo-app/src/domain/sale/model.ts
index 6961899..620d9c0 100644
--- a/packages/carmbo/carmbo-app/src/domain/sale/model.ts
+++ b/packages/carmbo/carmbo-app/src/domain/sale/model.ts
@@ -1,10 +1,12 @@
 import type {Sql} from 'postgres'
 import z from 'zod'
-import {HistoryOperationEnumSchema, type HistoryOperation} from '../../commons/operation-type.ts'
+import {type HistoryOperation} from '../../commons/operation-type.ts'
 import type {PendingQuery, Row} from 'postgres'
 import {sqlTextSearch} from '../../commons/sql-commons.ts'
 import assert from 'node:assert'
 import {TEST_executeHook} from '../../commons/TEST_hooks.ts'
+import {makeError} from '@giltayar/functional-commons'
+import type {CardcomIntegrationService} from '@giltayar/carmel-tools-cardcom-integration/service'
 
 export const SaleSchema = z.object({
   saleNumber: z.coerce.number().int().positive(),
@@ -25,6 +27,7 @@ export const SaleSchema = z.object({
     )
     .optional(),
   cardcomInvoiceNumber: z.string().optional(),
+  cardcomInvoiceDocumentUrl: z.url().optional(),
   manualSaleType: z.enum(['manual']).optional(),
 })
 
@@ -45,12 +48,23 @@ export const NewSaleSchema = z.object({
     )
     .optional(),
   cardcomInvoiceNumber: z.string().optional(),
+  cardcomInvoiceDocumentUrl: z.url().optional(),
   manualSaleType: z.enum(['manual']).optional(),
 })
 
+export const SaleHistoryOperationSchema = z.enum([
+  'create',
+  'update',
+  'delete',
+  'restore',
+  'create-tax-invoice-document',
+])
+
+export type SaleHistoryOperation = z.infer<typeof SaleHistoryOperationSchema>
+
 export const SaleWithHistoryInfoSchema = SaleSchema.extend({
   id: z.uuid(),
-  historyOperation: HistoryOperationEnumSchema,
+  historyOperation: SaleHistoryOperationSchema,
 })
 
 export type Sale = z.infer<typeof SaleSchema>
@@ -70,7 +84,7 @@ export interface SaleForGrid {
 
 export interface SaleHistory {
   historyId: string
-  operation: HistoryOperation
+  operation: SaleHistoryOperation
   timestamp: Date
 }
 
@@ -339,7 +353,7 @@ function saleSelect(saleNumber: number, sql: Sql) {
     LEFT JOIN student ON student.student_number = sale_data.student_number
     LEFT JOIN student_name ON student_name.data_id = student.last_data_id AND student_name.item_order = 0
     LEFT JOIN sale_data_cardcom ON sale_data_cardcom.data_cardcom_id = s.data_cardcom_id
-    LEFT JOIN sale_data_manual ON sale_data_manual.data_id = sh.data_id
+    LEFT JOIN sale_data_manual ON sale_data_manual.data_manual_id = sh.data_manual_id
     LEFT JOIN LATERAL (
       SELECT
         json_agg(
@@ -394,10 +408,11 @@ export async function createSale(sale: NewSale, reason: string | undefined, sql:
     const historyId = crypto.randomUUID()
     const dataId = crypto.randomUUID()
     const dataProductId = crypto.randomUUID()
+    const dataManualId = crypto.randomUUID()
 
     const saleNumberResult = await sql<{saleNumber: number}[]>`
       INSERT INTO sale_history VALUES
-        (${historyId}, ${dataId}, ${dataProductId}, DEFAULT, ${now}, 'create', ${reason ?? null})
+        (${historyId}, ${dataId}, ${dataProductId}, DEFAULT, ${now}, 'create', ${reason ?? null}, ${dataManualId})
       RETURNING sale_number
     `
 
@@ -451,7 +466,7 @@ export async function createSale(sale: NewSale, reason: string | undefined, sql:
     )
     if (sale.cardcomInvoiceNumber) {
       ops = ops.concat(sql`
-          INSERT INTO sale_data_manual VALUES (${dataId}, ${sale.cardcomInvoiceNumber})
+          INSERT INTO sale_data_manual VALUES (${dataManualId}, ${sale.cardcomInvoiceNumber})
       `)
     }
 
@@ -498,10 +513,11 @@ export async function updateSale(
     const historyId = crypto.randomUUID()
     const dataId = crypto.randomUUID()
     const dataProductId = crypto.randomUUID()
+    const dataManualId = crypto.randomUUID()
 
     await sql`
       INSERT INTO sale_history VALUES
-        (${historyId}, ${dataId}, ${dataProductId}, ${sale.saleNumber}, ${now}, 'update', ${reason ?? null})
+        (${historyId}, ${dataId}, ${dataProductId}, ${sale.saleNumber}, ${now}, 'update', ${reason ?? null}, ${dataManualId})
     `
 
     const updateResult = await sql`
@@ -561,7 +577,7 @@ export async function updateSale(
 
     if (sale.cardcomInvoiceNumber)
       ops = ops.concat(sql`
-        INSERT INTO sale_data_manual VALUES (${dataId}, ${sale.cardcomInvoiceNumber})
+        INSERT INTO sale_data_manual VALUES (${dataManualId}, ${sale.cardcomInvoiceNumber})
       `)
 
     ops = ops.concat(
@@ -626,3 +642,142 @@ export async function deleteSale(
     return historyId
   })
 }
+
+export async function createTaxInvoiceDocument(
+  saleNumber: number,
+  description: string,
+  now: Date,
+  sql: Sql,
+  cardcomIntegration: CardcomIntegrationService,
+) {
+  return await sql.begin(async (sql) => {
+    const historyId = crypto.randomUUID()
+    const dataManualId = crypto.randomUUID()
+    const sale = await querySaleForCreatingTaxInvoiceDocument(saleNumber, sql)
+
+    if (sale === undefined) throw makeError(`Sale ${saleNumber} does not exist`, {httpStatus: 404})
+
+    const {cardcomCustomerId, cardcomDocumentLink, cardcomInvoiceNumber} =
+      await cardcomIntegration.createTaxInvoice(
+        {
+          cardcomCustomerId: sale.studentCardcomCustomerId,
+          customerEmail: sale.studentEmail,
+          customerName: sale.studentFirstName + ' ' + sale.studentLastName,
+          productsSold:
+            sale.products?.map((p) => ({
+              productId: p.productNumber,
+              productName: p.productName,
+              quantity: p.quantity,
+              unitPriceInCents: p.unitPrice * 100,
+            })) ?? [],
+          transactionDate: sale.timestamp ?? now,
+          transactionDescription: description,
+        },
+        {sendInvoiceByMail: true},
+      )
+
+    const dataIdResult = await sql<object[]>`
+      INSERT INTO sale_history (id, data_id, data_product_id, sale_number, timestamp, operation, operation_reason, data_manual_id)
+      SELECT
+        ${historyId},
+        sale.last_data_id as last_data_id,
+        sale.last_data_product_id as last_data_product_id,
+        sale.sale_number,
+        ${now},
+        'create-tax-invoice-document',
+        'manual creation of tax document',
+        ${dataManualId}
+      FROM sale_history
+      INNER JOIN sale ON sale.sale_number = ${saleNumber}
+      WHERE id = sale.last_history_id
+      RETURNING 1
+    `
+
+    if (dataIdResult.length !== 1) {
+      throw new Error(`Zero or more than one sale with ID ${saleNumber}`)
+    }
+
+    await sql`
+      INSERT INTO sale_data_manual ${sql({
+        dataManualId,
+        cardcomInvoiceNumber,
+        invoiceDocumentUrl: cardcomDocumentLink,
+        cardcomCustomerId,
+      })}
+    `
+
+    await sql`
+      UPDATE sale SET
+        last_history_id = ${historyId},
+        data_manual_id = ${dataManualId}
+      WHERE sale_number = ${saleNumber}
+    `
+
+    return {url: cardcomDocumentLink}
+  })
+}
+
+async function querySaleForCreatingTaxInvoiceDocument(saleNumber: number, sql: Sql) {
+  const result = await sql<
+    {
+      studentCardcomCustomerId: number
+      studentEmail: string
+      studentFirstName: string
+      studentLastName: string
+      products: Array<{
+        productNumber: string
+        productName: string
+        quantity: number
+        unitPrice: number
+      }>
+      timestamp: Date | null
+    }[]
+  >`
+    SELECT
+      COALESCE(
+        sale_data_cardcom.customer_id,
+        sale_data_manual.cardcom_customer_id
+      )::integer AS student_cardcom_customer_id,
+      student_email.email AS student_email,
+      student_name.first_name AS student_first_name,
+      student_name.last_name AS student_last_name,
+      sale_data.timestamp AS timestamp,
+      COALESCE(products, json_build_array()) AS products
+    FROM
+      sale
+      JOIN sale_data ON sale_data.data_id = sale.last_data_id
+      LEFT JOIN sale_data_cardcom ON sale_data_cardcom.data_cardcom_id = sale.data_cardcom_id
+      LEFT JOIN sale_data_manual ON sale_data_manual.data_manual_id = sale.last_data_manual_id
+      JOIN student ON student.student_number = sale_data.student_number
+      JOIN student_name ON student_name.data_id = student.last_data_id AND student_name.item_order = 0
+      JOIN student_email ON student_email.data_id = student.last_data_id AND student_email.item_order = 0
+      LEFT JOIN LATERAL (
+        SELECT
+          json_agg(
+            json_build_object(
+              'productNumber', sale_data_product.product_number::text,
+              'productName', product_data.name,
+              'quantity', sale_data_product.quantity,
+              'unitPrice', sale_data_product.unit_price
+            )
+            ORDER BY
+              item_order
+          ) AS products
+        FROM
+          sale_data_product
+          INNER JOIN product ON product.product_number = sale_data_product.product_number
+          INNER JOIN product_data ON product_data.data_id = product.last_data_id
+        WHERE
+          sale_data_product.data_product_id = sale.last_data_product_id
+      ) products ON true
+    WHERE
+      sale.sale_number = ${saleNumber}
+  `
+  if (result.length === 0) return undefined
+
+  if (result.length > 1) {
+    throw new Error(`found more than one ${saleNumber} sale`)
+  }
+
+  return result[0]
+}
diff --git a/packages/carmbo/carmbo-app/src/domain/sale/route.ts b/packages/carmbo/carmbo-app/src/domain/sale/route.ts
index 5bb5b79..50a70a5 100644
--- a/packages/carmbo/carmbo-app/src/domain/sale/route.ts
+++ b/packages/carmbo/carmbo-app/src/domain/sale/route.ts
@@ -16,6 +16,7 @@ import {
   createSale,
   updateSale,
   deleteSale,
+  createTaxInvoiceDocument,
 } from './controller.ts'
 import {
   dealWithControllerResult,
@@ -141,6 +142,23 @@ export default function (app: FastifyInstance, {sql}: {sql: Sql}) {
     },
   )
 
+  appWithTypes.post(
+    '/:number/create-tax-invoice-document',
+    {schema: {params: z.object({number: z.coerce.number()})}},
+    async (request, reply) => {
+      const saleNumber = request.params.number
+      const description = request.headers['HX-Prompt']
+
+      if (Array.isArray(description)) {
+        throw new Error('bad HX-Prompt')
+      }
+
+      return dealWithControllerResultAsync(reply, () =>
+        createTaxInvoiceDocument(saleNumber, description ?? ''),
+      )
+    },
+  )
+
   // View sale in history
   appWithTypes.get(
     '/:number/by-history/:historyId',
diff --git a/packages/carmbo/carmbo-app/src/domain/sale/view/form.ts b/packages/carmbo/carmbo-app/src/domain/sale/view/form.ts
index ad6fad8..dafaba4 100644
--- a/packages/carmbo/carmbo-app/src/domain/sale/view/form.ts
+++ b/packages/carmbo/carmbo-app/src/domain/sale/view/form.ts
@@ -1,12 +1,15 @@
 import {html} from '../../../commons/html-templates.ts'
 import {generateItemTitle} from '../../../commons/view-commons.ts'
 import type {NewSale, Sale} from '../model.ts'
+import {InvoiceDocumentUrlLink} from './tax-invoice-document-url.ts'
 
 export function SalesFormFields({
   sale,
+  saleNumber,
   operation,
 }: {
   sale: Sale | NewSale
+  saleNumber: number | undefined
   operation: 'read' | 'write'
 }) {
   const isReadOnly = operation === 'read' || !('manualSaleType' in sale)
@@ -81,7 +84,18 @@ export function SalesFormFields({
             name="cardcomInvoiceNumber"
             value=${sale.cardcomInvoiceNumber}
             readonly=${isReadOnly}
-          />
+          />${sale.cardcomInvoiceDocumentUrl
+            ? html`<${InvoiceDocumentUrlLink} url=${sale.cardcomInvoiceDocumentUrl} />`
+            : sale.cardcomInvoiceNumber && saleNumber
+              ? html`<button
+                  class="button btn-sm"
+                  hx-prompt="Description"
+                  hx-target="this"
+                  hx-post=${`/sales/${saleNumber}/create-tax-invoice-document`}
+                >
+                  Create Tax Invoice Document
+                </button>`
+              : undefined}
         </div>
         ${sale.products && sale.products.length > 0
           ? html`
diff --git a/packages/carmbo/carmbo-app/src/domain/sale/view/history-operation-to-text.ts b/packages/carmbo/carmbo-app/src/domain/sale/view/history-operation-to-text.ts
new file mode 100644
index 0000000..8a132b6
--- /dev/null
+++ b/packages/carmbo/carmbo-app/src/domain/sale/view/history-operation-to-text.ts
@@ -0,0 +1,19 @@
+import {assertNever} from '@giltayar/functional-commons'
+import type {SaleHistoryOperation} from '../model.ts'
+
+export function saleHistoryOperationToText(operation: SaleHistoryOperation): string {
+  switch (operation) {
+    case 'create':
+      return 'created'
+    case 'update':
+      return 'updated'
+    case 'delete':
+      return 'archived'
+    case 'restore':
+      return 'restored'
+    case 'create-tax-invoice-document':
+      return 'created tax invoice document'
+    default:
+      assertNever(operation)
+  }
+}
diff --git a/packages/carmbo/carmbo-app/src/domain/sale/view/history.ts b/packages/carmbo/carmbo-app/src/domain/sale/view/history.ts
index e7fe6c0..f546b35 100644
--- a/packages/carmbo/carmbo-app/src/domain/sale/view/history.ts
+++ b/packages/carmbo/carmbo-app/src/domain/sale/view/history.ts
@@ -1,6 +1,7 @@
 import {html} from '../../../commons/html-templates.ts'
 import type {SaleHistory, SaleWithHistoryInfo} from '../model.ts'
 import type {HistoryOperation} from '../../../commons/operation-type.ts'
+import {saleHistoryOperationToText} from './history-operation-to-text.ts'
 
 export function SaleHistoryList({
   sale,
@@ -16,13 +17,13 @@ export function SaleHistoryList({
         const date = new Date(entry.timestamp)
         return html`<li class="list-group-item d-flex" style="text-transform: capitalize;">
           ${entry.historyId === sale.id
-            ? html`<strong class="d-block">${historyOperationToText(entry.operation)}</strong>`
+            ? html`<strong class="d-block">${saleHistoryOperationToText(entry.operation)}</strong>`
             : html` <a
                 class="d-block"
                 href=${`/sales/${sale.saleNumber}` +
                 (i > 0 ? `/by-history/${entry.historyId}` : '')}
               >
-                ${historyOperationToText(entry.operation)}</a
+                ${saleHistoryOperationToText(entry.operation)}</a
               >`}
           <span class="d-block ms-auto" title="${date.toLocaleTimeString('he-IL')}"
             >${date.toLocaleDateString('he-IL')}</span
diff --git a/packages/carmbo/carmbo-app/src/domain/sale/view/tax-invoice-document-url.ts b/packages/carmbo/carmbo-app/src/domain/sale/view/tax-invoice-document-url.ts
new file mode 100644
index 0000000..85fa581
--- /dev/null
+++ b/packages/carmbo/carmbo-app/src/domain/sale/view/tax-invoice-document-url.ts
@@ -0,0 +1,10 @@
+import {finalHtml} from '../../../commons/controller-result.ts'
+import {html} from '../../../commons/html-templates.ts'
+
+export function renderInvoiceDocumentUrlLink(url: string) {
+  return finalHtml(InvoiceDocumentUrlLink(url))
+}
+
+export function InvoiceDocumentUrlLink(url: string) {
+  return html`<a href=${url}>View Document</a>`
+}
diff --git a/packages/carmbo/carmbo-app/src/layout/banner.ts b/packages/carmbo/carmbo-app/src/layout/banner.ts
index 8bfb5cf..ed8c993 100644
--- a/packages/carmbo/carmbo-app/src/layout/banner.ts
+++ b/packages/carmbo/carmbo-app/src/layout/banner.ts
@@ -1,3 +1,6 @@
+import {finalHtml} from '../commons/controller-result.ts'
+import {html} from '../commons/html-templates.ts'
+
 export type BannerType = 'error' | 'info'
 
 export type Banner = {
@@ -17,3 +20,13 @@ export function exceptionToBanner(prefix: string, error: any): Banner | undefine
     disappearing: false,
   }
 }
+
+export function BannerComponent({banner}: {banner: Banner}) {
+  return html`<div class="main-view_banner" role="${banner.type === 'error' ? 'alert' : 'status'}">
+    ${banner.message}
+  </div>`
+}
+
+export function exceptionToBannerHtml(prefix: string, err: unknown) {
+  return finalHtml(html`<${BannerComponent} banner=${exceptionToBanner(prefix, err)} />`)
+}
diff --git a/packages/carmbo/carmbo-app/src/layout/main-view.ts b/packages/carmbo/carmbo-app/src/layout/main-view.ts
index 7bf81da..a906e97 100644
--- a/packages/carmbo/carmbo-app/src/layout/main-view.ts
+++ b/packages/carmbo/carmbo-app/src/layout/main-view.ts
@@ -1,4 +1,4 @@
-import type {Banner} from './banner.ts'
+import {BannerComponent, type Banner} from './banner.ts'
 import {html} from '../commons/html-templates.ts'
 
 export function MainLayout({
@@ -30,7 +30,11 @@ export function MainLayout({
           <div class="layouts-main-view">
             <header class="container"><${NavBar} activeNavItem=${activeNavItem} /></header>
             <main class="container">${children}</main>
-            ${banner ? html`<${Banner} banner=${banner}></${Banner}>` : undefined}
+            <div id="banner-container">
+              ${banner
+                ? html`<${BannerComponent} banner=${banner}></${BannerComponent}>`
+                : undefined}
+            </div>
           </div>
         </body>
       </html>
@@ -97,9 +101,3 @@ function NavBar({
     </nav>
   `
 }
-
-function Banner({banner}: {banner: Banner}) {
-  return html`<div class="main-view_banner" role="${banner.type === 'error' ? 'alert' : 'status'}">
-    ${banner.message}
-  </div>`
-}
diff --git a/packages/carmbo/carmbo-app/src/sql/00009_sale-cardcom-document-url.sql b/packages/carmbo/carmbo-app/src/sql/00009_sale-cardcom-document-url.sql
new file mode 100644
index 0000000..0398ad2
--- /dev/null
+++ b/packages/carmbo/carmbo-app/src/sql/00009_sale-cardcom-document-url.sql
@@ -0,0 +1,40 @@
+ALTER TABLE sale_data_cardcom
+ADD COLUMN invoice_document_url TEXT;
+
+ALTER TABLE sale_data_manual
+ADD COLUMN invoice_document_url TEXT;
+
+ALTER TABLE sale_data_manual
+ADD COLUMN cardcom_customer_id INTEGER;
+
+ALTER TABLE sale
+ADD COLUMN last_data_manual_id UUID;
+
+UPDATE sale
+SET
+  last_data_manual_id = last_data_id;
+
+ALTER TABLE sale_history
+ADD COLUMN data_manual_id UUID;
+
+UPDATE sale_history
+SET
+  data_manual_id = data_id;
+
+ALTER TABLE sale_data_manual
+ADD COLUMN data_manual_id UUID;
+
+UPDATE sale_data_manual
+SET
+  data_manual_id = data_id;
+
+ALTER TABLE sale_data_manual
+DROP COLUMN data_id;
+
+ALTER TYPE SALE_OPERATION ADD VALUE 'update';
+
+CREATE TYPE SALE_OPERATION ADD VALUE 'delete';
+
+CREATE TYPE SALE_OPERATION ADD VALUE 'restore';
+
+CREATE TYPE SALE_OPERATION ADD VALUE 'create-tax-invoice-document';
\ No newline at end of file
diff --git a/packages/carmbo/carmbo-app/test/integration/common/setup.ts b/packages/carmbo/carmbo-app/test/integration/common/setup.ts
index dc045d3..a2b3580 100644
--- a/packages/carmbo/carmbo-app/test/integration/common/setup.ts
+++ b/packages/carmbo/carmbo-app/test/integration/common/setup.ts
@@ -12,6 +12,7 @@ import type {SmooveIntegrationService} from '@giltayar/carmel-tools-smoove-integ
 import {migrate} from '../../../src/sql/migration.ts'
 import {fileURLToPath} from 'node:url'
 import {resetHooks, type TEST_HookFunction} from '../../../src/commons/TEST_hooks.ts'
+import {createFakeCardcomIntegrationService} from '@giltayar/carmel-tools-cardcom-integration/testkit'
 
 export function setup(testUrl: string): {
   url: () => URL
@@ -88,6 +89,7 @@ export function setup(testUrl: string): {
           },
         }),
         smooveIntegration,
+        cardcomIntegration: createFakeCardcomIntegrationService({accounts: {}}),
       },
       auth0: undefined,
       appBaseUrl: 'http://localhost:????',
diff --git a/packages/carmel-tools/cardcom-integration/package.json b/packages/carmel-tools/cardcom-integration/package.json
index b465218..70cad26 100644
--- a/packages/carmel-tools/cardcom-integration/package.json
+++ b/packages/carmel-tools/cardcom-integration/package.json
@@ -52,21 +52,22 @@
   },
   "devDependencies": {
     "@eslint/eslintrc": "^3.3.1",
-    "@eslint/js": "^9.30.1",
-    "@types/node": "^24.0.13",
-    "@typescript/native-preview": "7.0.0-dev.20250630.1",
-    "eslint": "^9.30.1",
-    "eslint-plugin-n": "^17.21.0",
-    "eslint-plugin-prettier": "^5.5.1",
-    "globals": "^16.3.0",
+    "@eslint/js": "^9.38.0",
+    "@types/node": "^24.8.1",
+    "@typescript/native-preview": "7.0.0-dev.20251018.1",
+    "eslint": "^9.38.0",
+    "eslint-plugin-n": "^17.23.1",
+    "eslint-plugin-prettier": "^5.5.4",
+    "globals": "^16.4.0",
     "npm-run-all": "^4.1.5",
     "prettier": "^3.6.2",
-    "typescript-eslint": "^8.36.0"
+    "typescript-eslint": "^8.46.0"
   },
   "dependencies": {
-    "@giltayar/functional-commons": "^1.4.2",
-    "@giltayar/service-commons": "^1.1.2",
+    "@giltayar/functional-commons": "^2.1.0",
+    "@giltayar/http-commons": "^3.1.1",
+    "@giltayar/service-commons": "^1.1.3",
     "execa": "^9.6.0"
   },
-  "packageManager": "pnpm@10.10.0"
+  "packageManager": "pnpm@10.18.3"
 }
diff --git a/packages/carmel-tools/cardcom-integration/pnpm-lock.yaml b/packages/carmel-tools/cardcom-integration/pnpm-lock.yaml
index e560321..2973af6 100644
--- a/packages/carmel-tools/cardcom-integration/pnpm-lock.yaml
+++ b/packages/carmel-tools/cardcom-integration/pnpm-lock.yaml
@@ -9,11 +9,14 @@ importers:
   .:
     dependencies:
       '@giltayar/functional-commons':
-        specifier: ^1.4.2
-        version: 1.4.2
+        specifier: ^2.1.0
+        version: 2.1.0
+      '@giltayar/http-commons':
+        specifier: ^3.1.1
+        version: 3.1.1
       '@giltayar/service-commons':
-        specifier: ^1.1.2
-        version: 1.1.2
+        specifier: ^1.1.3
+        version: 1.1.3
       execa:
         specifier: ^9.6.0
         version: 9.6.0
@@ -22,26 +25,26 @@ importers:
         specifier: ^3.3.1
         version: 3.3.1
       '@eslint/js':
-        specifier: ^9.30.1
-        version: 9.30.1
+        specifier: ^9.38.0
+        version: 9.38.0
       '@types/node':
-        specifier: ^24.0.13
-        version: 24.0.13
+        specifier: ^24.8.1
+        version: 24.8.1
       '@typescript/native-preview':
-        specifier: 7.0.0-dev.20250630.1
-        version: 7.0.0-dev.20250630.1
+        specifier: 7.0.0-dev.20251018.1
+        version: 7.0.0-dev.20251018.1
       eslint:
-        specifier: ^9.30.1
-        version: 9.30.1
+        specifier: ^9.38.0
+        version: 9.38.0
       eslint-plugin-n:
-        specifier: ^17.21.0
-        version: 17.21.0(eslint@9.30.1)(typescript@5.8.3)
+        specifier: ^17.23.1
+        version: 17.23.1(eslint@9.38.0)(typescript@5.8.3)
       eslint-plugin-prettier:
-        specifier: ^5.5.1
-        version: 5.5.1(eslint@9.30.1)(prettier@3.6.2)
+        specifier: ^5.5.4
+        version: 5.5.4(eslint@9.38.0)(prettier@3.6.2)
       globals:
-        specifier: ^16.3.0
-        version: 16.3.0
+        specifier: ^16.4.0
+        version: 16.4.0
       npm-run-all:
         specifier: ^4.1.5
         version: 4.1.5
@@ -49,13 +52,13 @@ importers:
         specifier: ^3.6.2
         version: 3.6.2
       typescript-eslint:
-        specifier: ^8.36.0
-        version: 8.36.0(eslint@9.30.1)(typescript@5.8.3)
+        specifier: ^8.46.0
+        version: 8.46.0(eslint@9.38.0)(typescript@5.8.3)
 
 packages:
 
-  '@eslint-community/eslint-utils@4.7.0':
-    resolution: {integrity: sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==}
+  '@eslint-community/eslint-utils@4.9.0':
+    resolution: {integrity: sha512-ayVFHdtZ+hsq1t2Dy24wCmGXGe4q9Gu3smhLYALJrr473ZH27MsnSL+LKUlimp4BWJqMDMLmPpx/Q9R3OAlL4g==}
     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
     peerDependencies:
       eslint: ^6.0.0 || ^7.0.0 || >=8.0.0
@@ -64,62 +67,80 @@ packages:
     resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}
     engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}
 
-  '@eslint/config-array@0.21.0':
-    resolution: {integrity: sha512-ENIdc4iLu0d93HeYirvKmrzshzofPw6VkZRKQGe9Nv46ZnWUzcF1xV01dcvEg/1wXUR61OmmlSfyeyO7EvjLxQ==}
+  '@eslint/config-array@0.21.1':
+    resolution: {integrity: sha512-aw1gNayWpdI/jSYVgzN5pL0cfzU02GT3NBpeT/DXbx1/1x7ZKxFPd9bwrzygx/qiwIQiJ1sw/zD8qY/kRvlGHA==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@eslint/config-helpers@0.3.0':
-    resolution: {integrity: sha512-ViuymvFmcJi04qdZeDc2whTHryouGcDlaxPqarTD0ZE10ISpxGUVZGZDx4w01upyIynL3iu6IXH2bS1NhclQMw==}
+  '@eslint/config-helpers@0.4.1':
+    resolution: {integrity: sha512-csZAzkNhsgwb0I/UAV6/RGFTbiakPCf0ZrGmrIxQpYvGZ00PhTkSnyKNolphgIvmnJeGw6rcGVEXfTzUnFuEvw==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@eslint/core@0.14.0':
-    resolution: {integrity: sha512-qIbV0/JZr7iSDjqAc60IqbLdsj9GDt16xQtWD+B78d/HAlvysGdZZ6rpJHGAc2T0FQx1X6thsSPdnoiGKdNtdg==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  '@eslint/core@0.15.1':
-    resolution: {integrity: sha512-bkOp+iumZCCbt1K1CmWf0R9pM5yKpDv+ZXtvSyQpudrI9kuFLp+bM2WOPXImuD/ceQuaa8f5pj93Y7zyECIGNA==}
+  '@eslint/core@0.16.0':
+    resolution: {integrity: sha512-nmC8/totwobIiFcGkDza3GIKfAw1+hLiYVrh3I1nIomQ8PEr5cxg34jnkmGawul/ep52wGRAcyeDCNtWKSOj4Q==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
   '@eslint/eslintrc@3.3.1':
     resolution: {integrity: sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@eslint/js@9.30.1':
-    resolution: {integrity: sha512-zXhuECFlyep42KZUhWjfvsmXGX39W8K8LFb8AWXM9gSV9dQB+MrJGLKvW6Zw0Ggnbpw0VHTtrhFXYe3Gym18jg==}
+  '@eslint/js@9.38.0':
+    resolution: {integrity: sha512-UZ1VpFvXf9J06YG9xQBdnzU+kthors6KjhMAl6f4gH4usHyh31rUf2DLGInT8RFYIReYXNSydgPY0V2LuWgl7A==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@eslint/object-schema@2.1.6':
-    resolution: {integrity: sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==}
+  '@eslint/object-schema@2.1.7':
+    resolution: {integrity: sha512-VtAOaymWVfZcmZbp6E2mympDIHvyjXs/12LqWYjVw6qjrfF+VK+fyG33kChz3nnK+SU5/NeHOqrTEHS8sXO3OA==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@eslint/plugin-kit@0.3.3':
-    resolution: {integrity: sha512-1+WqvgNMhmlAambTvT3KPtCl/Ibr68VldY2XY40SL1CE0ZXiakFR/cbTspaF5HsnpDMvcYYoJHfl4980NBjGag==}
+  '@eslint/plugin-kit@0.4.0':
+    resolution: {integrity: sha512-sB5uyeq+dwCWyPi31B2gQlVlo+j5brPlWx4yZBrEaRo/nhdDE8Xke1gsGgtiBdaBTxuTkceLVuVt/pclrasb0A==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@giltayar/functional-commons@1.4.2':
-    resolution: {integrity: sha512-jOzy/GzWeA1GnIFLZqEDMTMzgUhyiF4AkWPAPoXW53dI80BFa1LceFBn2R/RAoq8yM2TM2lrO4e+n2tBhtMEtw==, tarball: https://npm.pkg.github.com/download/@giltayar/functional-commons/1.4.2/52273a1dd0c4cda82a78739e780dbeca57b27af6}
-    engines: {node: '>=15.0.0'}
+  '@fastify/ajv-compiler@4.0.2':
+    resolution: {integrity: sha512-Rkiu/8wIjpsf46Rr+Fitd3HRP+VsxUFDDeag0hs9L0ksfnwx2g7SPQQTFL0E8Qv+rfXzQOxBJnjUB9ITUDjfWQ==}
+
+  '@fastify/error@4.2.0':
+    resolution: {integrity: sha512-RSo3sVDXfHskiBZKBPRgnQTtIqpi/7zhJOEmAxCiBcM7d0uwdGdxLlsCaLzGs8v8NnxIRlfG0N51p5yFaOentQ==}
+
+  '@fastify/fast-json-stringify-compiler@5.0.3':
+    resolution: {integrity: sha512-uik7yYHkLr6fxd8hJSZ8c+xF4WafPK+XzneQDPU+D10r5X19GW8lJcom2YijX2+qtFF1ENJlHXKFM9ouXNJYgQ==}
+
+  '@fastify/forwarded@3.0.1':
+    resolution: {integrity: sha512-JqDochHFqXs3C3Ml3gOY58zM7OqO9ENqPo0UqAjAjH8L01fRZqwX9iLeX34//kiJubF7r2ZQHtBRU36vONbLlw==}
+
+  '@fastify/merge-json-schemas@0.2.1':
+    resolution: {integrity: sha512-OA3KGBCy6KtIvLf8DINC5880o5iBlDX4SxzLQS8HorJAbqluzLRn80UXU0bxZn7UOFhFgpRJDasfwn9nG4FG4A==}
+
+  '@fastify/proxy-addr@5.1.0':
+    resolution: {integrity: sha512-INS+6gh91cLUjB+PVHfu1UqcB76Sqtpyp7bnL+FYojhjygvOPA9ctiD/JDKsyD9Xgu4hUhCSJBPig/w7duNajw==}
+
+  '@giltayar/functional-commons@2.1.0':
+    resolution: {integrity: sha512-w89ww0ygJ3AY9SIx/IfWd51XSYBcBDAatvOdqQWTMInCT29g2fxp/fgqGdjitgtGGm15TarDxfgCkXTmP8Mkrw==, tarball: https://npm.pkg.github.com/download/@giltayar/functional-commons/2.1.0/83f1faa9cf9f176147590f14fb06bee1af2add1e}
+    engines: {node: '>=24.0.0'}
+
+  '@giltayar/http-commons@3.1.1':
+    resolution: {integrity: sha512-/wUqa/VcYPgRZ7p9eE3qm9ShRsrTo3BEa2wEE+9Qekjp1OpoEHGxln+Qh/lyoBuhtxvvWPohMt/hHzjmrWXihQ==, tarball: https://npm.pkg.github.com/download/@giltayar/http-commons/3.1.1/8b50985c30c823aca57d2c68397b26b66dbb46c1}
+    engines: {node: '>=24.0.0'}
+
+  '@giltayar/promise-commons@2.0.0':
+    resolution: {integrity: sha512-oWL/jGRJ/lzcX5aAQDgTG9VxLXKBkLMDEaxVaz8lWhgtYQbXMSufCCbu6ue0oNxx+UxKUPMmyPVfcNJHludDdQ==, tarball: https://npm.pkg.github.com/download/@giltayar/promise-commons/2.0.0/0f2089186fb5a11c834ff88401830991f8953dd9}
+    engines: {node: '>=24.0.0'}
 
-  '@giltayar/service-commons@1.1.2':
-    resolution: {integrity: sha512-n02GZtlKeWgmygkYjPoo6HvRiqEFnMrI/fsHjt0W55D3mxj+hEbue70u4TiHxflMoMGg/+ybT7nHIVujFXuQ6w==, tarball: https://npm.pkg.github.com/download/@giltayar/service-commons/1.1.2/9354131ef37631904a278f91ae26065f29805d4f}
+  '@giltayar/service-commons@1.1.3':
+    resolution: {integrity: sha512-giaPHTur9bXQxAmAGq/7FYgCDasWOcd9Uls77HsmZ44EncDI0YRutomi1vUHP4p6tQOXMpsIRIKab38zn4X47A==, tarball: https://npm.pkg.github.com/download/@giltayar/service-commons/1.1.3/7fb853128d08b1ce0009d0bd1063c8d8b75e9526}
     engines: {node: '>=24.3.0'}
 
   '@humanfs/core@0.19.1':
     resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}
     engines: {node: '>=18.18.0'}
 
-  '@humanfs/node@0.16.6':
-    resolution: {integrity: sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==}
+  '@humanfs/node@0.16.7':
+    resolution: {integrity: sha512-/zUx+yOsIrG4Y43Eh2peDeKCxlRt/gET6aHfaKpuq267qXdYDFViVHfMaLyygZOnl0kGWxFIgsBy8QFuTLUXEQ==}
     engines: {node: '>=18.18.0'}
 
   '@humanwhocodes/module-importer@1.0.1':
     resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}
     engines: {node: '>=12.22'}
 
-  '@humanwhocodes/retry@0.3.1':
-    resolution: {integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==}
-    engines: {node: '>=18.18'}
-
   '@humanwhocodes/retry@0.4.3':
     resolution: {integrity: sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==}
     engines: {node: '>=18.18'}
@@ -136,8 +157,8 @@ packages:
     resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
     engines: {node: '>= 8'}
 
-  '@pkgr/core@0.2.7':
-    resolution: {integrity: sha512-YLT9Zo3oNPJoBjBc4q8G2mjU4tqIbf5CEOORbUUr48dCD9q3umJ3IPlVqOqDakPfd2HuwccBaqlGhN4Gmr5OWg==}
+  '@pkgr/core@0.2.9':
+    resolution: {integrity: sha512-QNqXyfVS2wm9hweSYD2O7F0G06uurj9kZ96TRQE5Y9hU7+tgdZwIkbAKc5Ocy1HxEY2kuDQa6cQ1WRs/O5LFKA==}
     engines: {node: ^12.20.0 || ^14.18.0 || >=16.0.0}
 
   '@sec-ant/readable-stream@0.4.1':
@@ -153,115 +174,110 @@ packages:
   '@types/json-schema@7.0.15':
     resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}
 
-  '@types/node@24.0.13':
-    resolution: {integrity: sha512-Qm9OYVOFHFYg3wJoTSrz80hoec5Lia/dPp84do3X7dZvLikQvM1YpmvTBEdIr/e+U8HTkFjLHLnl78K/qjf+jQ==}
+  '@types/node@24.8.1':
+    resolution: {integrity: sha512-alv65KGRadQVfVcG69MuB4IzdYVpRwMG/mq8KWOaoOdyY617P5ivaDiMCGOFDWD2sAn5Q0mR3mRtUOgm99hL9Q==}
 
-  '@typescript-eslint/eslint-plugin@8.36.0':
-    resolution: {integrity: sha512-lZNihHUVB6ZZiPBNgOQGSxUASI7UJWhT8nHyUGCnaQ28XFCw98IfrMCG3rUl1uwUWoAvodJQby2KTs79UTcrAg==}
+  '@typescript-eslint/eslint-plugin@8.46.0':
+    resolution: {integrity: sha512-hA8gxBq4ukonVXPy0OKhiaUh/68D0E88GSmtC1iAEnGaieuDi38LhS7jdCHRLi6ErJBNDGCzvh5EnzdPwUc0DA==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
-      '@typescript-eslint/parser': ^8.36.0
+      '@typescript-eslint/parser': ^8.46.0
       eslint: ^8.57.0 || ^9.0.0
-      typescript: '>=4.8.4 <5.9.0'
+      typescript: '>=4.8.4 <6.0.0'
 
-  '@typescript-eslint/parser@8.36.0':
-    resolution: {integrity: sha512-FuYgkHwZLuPbZjQHzJXrtXreJdFMKl16BFYyRrLxDhWr6Qr7Kbcu2s1Yhu8tsiMXw1S0W1pjfFfYEt+R604s+Q==}
+  '@typescript-eslint/parser@8.46.0':
+    resolution: {integrity: sha512-n1H6IcDhmmUEG7TNVSspGmiHHutt7iVKtZwRppD7e04wha5MrkV1h3pti9xQLcCMt6YWsncpoT0HMjkH1FNwWQ==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
       eslint: ^8.57.0 || ^9.0.0
-      typescript: '>=4.8.4 <5.9.0'
+      typescript: '>=4.8.4 <6.0.0'
 
-  '@typescript-eslint/project-service@8.36.0':
-    resolution: {integrity: sha512-JAhQFIABkWccQYeLMrHadu/fhpzmSQ1F1KXkpzqiVxA/iYI6UnRt2trqXHt1sYEcw1mxLnB9rKMsOxXPxowN/g==}
+  '@typescript-eslint/project-service@8.46.0':
+    resolution: {integrity: sha512-OEhec0mH+U5Je2NZOeK1AbVCdm0ChyapAyTeXVIYTPXDJ3F07+cu87PPXcGoYqZ7M9YJVvFnfpGg1UmCIqM+QQ==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
-      typescript: '>=4.8.4 <5.9.0'
+      typescript: '>=4.8.4 <6.0.0'
 
-  '@typescript-eslint/scope-manager@8.36.0':
-    resolution: {integrity: sha512-wCnapIKnDkN62fYtTGv2+RY8FlnBYA3tNm0fm91kc2BjPhV2vIjwwozJ7LToaLAyb1ca8BxrS7vT+Pvvf7RvqA==}
+  '@typescript-eslint/scope-manager@8.46.0':
+    resolution: {integrity: sha512-lWETPa9XGcBes4jqAMYD9fW0j4n6hrPtTJwWDmtqgFO/4HF4jmdH/Q6wggTw5qIT5TXjKzbt7GsZUBnWoO3dqw==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@typescript-eslint/tsconfig-utils@8.36.0':
-    resolution: {integrity: sha512-Nhh3TIEgN18mNbdXpd5Q8mSCBnrZQeY9V7Ca3dqYvNDStNIGRmJA6dmrIPMJ0kow3C7gcQbpsG2rPzy1Ks/AnA==}
+  '@typescript-eslint/tsconfig-utils@8.46.0':
+    resolution: {integrity: sha512-WrYXKGAHY836/N7zoK/kzi6p8tXFhasHh8ocFL9VZSAkvH956gfeRfcnhs3xzRy8qQ/dq3q44v1jvQieMFg2cw==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
-      typescript: '>=4.8.4 <5.9.0'
+      typescript: '>=4.8.4 <6.0.0'
 
-  '@typescript-eslint/type-utils@8.36.0':
-    resolution: {integrity: sha512-5aaGYG8cVDd6cxfk/ynpYzxBRZJk7w/ymto6uiyUFtdCozQIsQWh7M28/6r57Fwkbweng8qAzoMCPwSJfWlmsg==}
+  '@typescript-eslint/type-utils@8.46.0':
+    resolution: {integrity: sha512-hy+lvYV1lZpVs2jRaEYvgCblZxUoJiPyCemwbQZ+NGulWkQRy0HRPYAoef/CNSzaLt+MLvMptZsHXHlkEilaeg==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
       eslint: ^8.57.0 || ^9.0.0
-      typescript: '>=4.8.4 <5.9.0'
+      typescript: '>=4.8.4 <6.0.0'
 
-  '@typescript-eslint/types@8.36.0':
-    resolution: {integrity: sha512-xGms6l5cTJKQPZOKM75Dl9yBfNdGeLRsIyufewnxT4vZTrjC0ImQT4fj8QmtJK84F58uSh5HVBSANwcfiXxABQ==}
+  '@typescript-eslint/types@8.46.0':
+    resolution: {integrity: sha512-bHGGJyVjSE4dJJIO5yyEWt/cHyNwga/zXGJbJJ8TiO01aVREK6gCTu3L+5wrkb1FbDkQ+TKjMNe9R/QQQP9+rA==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@typescript-eslint/typescript-estree@8.36.0':
-    resolution: {integrity: sha512-JaS8bDVrfVJX4av0jLpe4ye0BpAaUW7+tnS4Y4ETa3q7NoZgzYbN9zDQTJ8kPb5fQ4n0hliAt9tA4Pfs2zA2Hg==}
+  '@typescript-eslint/typescript-estree@8.46.0':
+    resolution: {integrity: sha512-ekDCUfVpAKWJbRfm8T1YRrCot1KFxZn21oV76v5Fj4tr7ELyk84OS+ouvYdcDAwZL89WpEkEj2DKQ+qg//+ucg==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
-      typescript: '>=4.8.4 <5.9.0'
+      typescript: '>=4.8.4 <6.0.0'
 
-  '@typescript-eslint/utils@8.36.0':
-    resolution: {integrity: sha512-VOqmHu42aEMT+P2qYjylw6zP/3E/HvptRwdn/PZxyV27KhZg2IOszXod4NcXisWzPAGSS4trE/g4moNj6XmH2g==}
+  '@typescript-eslint/utils@8.46.0':
+    resolution: {integrity: sha512-nD6yGWPj1xiOm4Gk0k6hLSZz2XkNXhuYmyIrOWcHoPuAhjT9i5bAG+xbWPgFeNR8HPHHtpNKdYUXJl/D3x7f5g==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
       eslint: ^8.57.0 || ^9.0.0
-      typescript: '>=4.8.4 <5.9.0'
+      typescript: '>=4.8.4 <6.0.0'
 
-  '@typescript-eslint/visitor-keys@8.36.0':
-    resolution: {integrity: sha512-vZrhV2lRPWDuGoxcmrzRZyxAggPL+qp3WzUrlZD+slFueDiYHxeBa34dUXPuC0RmGKzl4lS5kFJYvKCq9cnNDA==}
+  '@typescript-eslint/visitor-keys@8.46.0':
+    resolution: {integrity: sha512-FrvMpAK+hTbFy7vH5j1+tMYHMSKLE6RzluFJlkFNKD0p9YsUT75JlBSmr5so3QRzvMwU5/bIEdeNrxm8du8l3Q==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@typescript/native-preview-darwin-arm64@7.0.0-dev.20250630.1':
-    resolution: {integrity: sha512-0dzf8pgG0+iziaeCUgsnXJtfPMdD3h8lt1+U7hMxSL/3raGZrNnw+xCp7M97yfdTp7zty664E87R2EFsa2HbqA==}
-    engines: {node: '>=20.6.0'}
+  '@typescript/native-preview-darwin-arm64@7.0.0-dev.20251018.1':
+    resolution: {integrity: sha512-a7I5ZmkI2s8MwtImzTYfwOpZuaBn/xZRMiKoTSoTZpuZPwer0FxN+B60rn3G07cWGLM+Cs1tSb2HC8iCgD+H/w==}
     cpu: [arm64]
     os: [darwin]
 
-  '@typescript/native-preview-darwin-x64@7.0.0-dev.20250630.1':
-    resolution: {integrity: sha512-6rfJNqryz4uCsOYqFcfRBusqws9Gyv9mmG7ReAvTMB7bJ1K1HzQCUYyiQK+K3R2ABfAWepWin8D9LOvyRpcRTw==}
-    engines: {node: '>=20.6.0'}
+  '@typescript/native-preview-darwin-x64@7.0.0-dev.20251018.1':
+    resolution: {integrity: sha512-UVGjOnH/Xl5mS0eRHwRAKkR3FeZhxKJtZ1W7dQQcuCOjofi1pOpFcB3BZ4JRklGbaGeWEJVeZM7bWoaDhH0hrg==}
     cpu: [x64]
     os: [darwin]
 
-  '@typescript/native-preview-linux-arm64@7.0.0-dev.20250630.1':
-    resolution: {integrity: sha512-P78aQghwoi8VqCuTqLCGWqsrsb7igKB802WlQ6LgTzHqugLPbizBoHjgzfxciy6RWvRFYsKfUz++mcJLH8teCw==}
-    engines: {node: '>=20.6.0'}
+  '@typescript/native-preview-linux-arm64@7.0.0-dev.20251018.1':
+    resolution: {integrity: sha512-WxuPuPMFjA7bHte6Pm8fxmbdW3/r5lm2lXKe7IZIXCGip/5eHXf5DWJTlH784saYK/29REiu2KOjLRQRDZtkEg==}
     cpu: [arm64]
     os: [linux]
 
-  '@typescript/native-preview-linux-arm@7.0.0-dev.20250630.1':
-    resolution: {integrity: sha512-bzXkVa3Cf3IL4BcoGDLZh9e3Ny/lC129QloU8vO+zUrzBMJpI4Vo7+i8yuI1/+FFYYMpDxlPt+65inTTvPzfqQ==}
-    engines: {node: '>=20.6.0'}
+  '@typescript/native-preview-linux-arm@7.0.0-dev.20251018.1':
+    resolution: {integrity: sha512-MVy2YLfrNOsrYfvpbFccv09io7NWOT4hx+kwjaL6Rsbect+d9y28LymrSHyaCH7RPP+X3x3dEUoZ+xqxJF3lkA==}
     cpu: [arm]
     os: [linux]
 
-  '@typescript/native-preview-linux-x64@7.0.0-dev.20250630.1':
-    resolution: {integrity: sha512-cUAOI7d/H+Dv2OFT2D8jMl15DJzxJCPE58tAGKiFwx4WTtcRVPfEA1dDcW/Nz7g2sShGdYtjOpmDFoq8oNMNzA==}
-    engines: {node: '>=20.6.0'}
+  '@typescript/native-preview-linux-x64@7.0.0-dev.20251018.1':
+    resolution: {integrity: sha512-6npm6IjmtLwuRuXAoBhC89mI7r/Jqs21OKwaVmyFDOai9EPxIRDVpVOGTI51DY3ZW1cA52ujjAMA+TA9a6AI5Q==}
     cpu: [x64]
     os: [linux]
 
-  '@typescript/native-preview-win32-arm64@7.0.0-dev.20250630.1':
-    resolution: {integrity: sha512-mXvB+NyWncpANVqjVCF/Ku5G1BukgU5zmMh7TAHFHYYLy//ROV9k2lqZnXSvAquMXLd9QqTEDVCx3ftgdxgKWw==}
-    engines: {node: '>=20.6.0'}
+  '@typescript/native-preview-win32-arm64@7.0.0-dev.20251018.1':
+    resolution: {integrity: sha512-t35/4nTnxGW4SwRgLxEuyiThgDzEhK2H4LdIij7PYfiJST6R5Q/p8cSSxdtCa7Egu2HZux/PaH93lZsb05II6w==}
     cpu: [arm64]
     os: [win32]
 
-  '@typescript/native-preview-win32-x64@7.0.0-dev.20250630.1':
-    resolution: {integrity: sha512-XZGiq5Ohgd+SqsqLWH212oKva/z6Coqp7YX99H5udD97Nzv2VApOSme20qEG3upCAmta8kBKpezQStdkKKr+gA==}
-    engines: {node: '>=20.6.0'}
+  '@typescript/native-preview-win32-x64@7.0.0-dev.20251018.1':
+    resolution: {integrity: sha512-ni/l6GEqvJ3jxLBYnwtEf5+zT5xcGA9qBsmVuyMJGy8GvMp+3P8IDpA2EHN7ibgg0UODHl8J3XEMjo42SCW1EA==}
     cpu: [x64]
     os: [win32]
 
-  '@typescript/native-preview@7.0.0-dev.20250630.1':
-    resolution: {integrity: sha512-yfbeJ41O5uWrpnSoWdd8UmyDG+YH1cE7Qri/J8ZKRSn2r9iPDEWSh5FTvruh0U4/yYMFoa3FxjD8NKv+Xt3A7A==}
-    engines: {node: '>=20.6.0'}
+  '@typescript/native-preview@7.0.0-dev.20251018.1':
+    resolution: {integrity: sha512-7Jg5vk8GZtp6Tpxq5DRF8AgWabB8naOHN4f8VnUcchMsZHz2LNmsaNCY96PZgh6EE12fF+zAGDfTJ5cgWaJshw==}
     hasBin: true
 
+  abstract-logging@2.0.1:
+    resolution: {integrity: sha512-2BjRTZxTPvheOvGbBslFSYOUkr+SjPtOnrLP33f+VIWLzezQpZcqVg7ja3L4dBXmzzgwT+a029jRx5PCi3JuiA==}
+
   acorn-jsx@5.3.2:
     resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}
     peerDependencies:
@@ -272,9 +288,24 @@ packages:
     engines: {node: '>=0.4.0'}
     hasBin: true
 
+  agentkeepalive@4.6.0:
+    resolution: {integrity: sha512-kja8j7PjmncONqaTsB8fQ+wE2mSU2DJ9D4XKoJ5PFWIdRMa6SLSN1ff4mOr4jCbfRSsxR4keIiySJU0N9T5hIQ==}
+    engines: {node: '>= 8.0.0'}
+
+  ajv-formats@3.0.1:
+    resolution: {integrity: sha512-8iUql50EUR+uUcdRQ3HDqa6EVyo3docL8g5WJ3FNcWmu62IbkGUue/pEyLBW8VGKKucTPgqeks4fIU1DA4yowQ==}
+    peerDependencies:
+      ajv: ^8.0.0
+    peerDependenciesMeta:
+      ajv:
+        optional: true
+
   ajv@6.12.6:
     resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}
 
+  ajv@8.17.1:
+    resolution: {integrity: sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==}
+
   ansi-styles@3.2.1:
     resolution: {integrity: sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==}
     engines: {node: '>=4'}
@@ -298,10 +329,17 @@ packages:
     resolution: {integrity: sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==}
     engines: {node: '>= 0.4'}
 
+  atomic-sleep@1.0.0:
+    resolution: {integrity: sha512-kNOjDqAh7px0XWNI+4QbzoiR/nTkHAWNud2uvnJquD1/x5a7EQZMJT0AczqK0Qn67oY/TTQ1LbUKajZpp3I9tQ==}
+    engines: {node: '>=8.0.0'}
+
   available-typed-arrays@1.0.7:
     resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}
     engines: {node: '>= 0.4'}
 
+  avvio@9.1.0:
+    resolution: {integrity: sha512-fYASnYi600CsH/j9EQov7lECAniYiBFiiAtBNuZYLA2leLe9qOvZzqYHFjtIj6gD2VMoMLP14834LFWvr4IfDw==}
+
   balanced-match@1.0.2:
     resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}
 
@@ -355,6 +393,10 @@ packages:
   concat-map@0.0.1:
     resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}
 
+  cookie@1.0.2:
+    resolution: {integrity: sha512-9Kr/j4O16ISv8zBBhJoi4bXOYNTkFLOqSL3UDB0njXxCXNezjeyVrJyGOWtgfs/q2km1gwBcfH8q1yEGoMYunA==}
+    engines: {node: '>=18'}
+
   cross-spawn@6.0.6:
     resolution: {integrity: sha512-VqCUuhcd1iB+dsv8gxPttb5iZh/D0iubSP21g36KXdEuf6I5JiioesUVjpCdHV9MZRUfVFlvwtIUyPfxo5trtw==}
     engines: {node: '>=4.8'}
@@ -375,8 +417,8 @@ packages:
     resolution: {integrity: sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==}
     engines: {node: '>= 0.4'}
 
-  debug@4.4.1:
-    resolution: {integrity: sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==}
+  debug@4.4.3:
+    resolution: {integrity: sha512-RGwwWnwQvkVfavKVt22FGLw+xYSdzARwm0ru6DhTVA3umU5hZc28V3kO4stgYryrTlLpuvgI9GiijltAjNbcqA==}
     engines: {node: '>=6.0'}
     peerDependencies:
       supports-color: '*'
@@ -395,16 +437,20 @@ packages:
     resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}
     engines: {node: '>= 0.4'}
 
+  dequal@2.0.3:
+    resolution: {integrity: sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==}
+    engines: {node: '>=6'}
+
   dunder-proto@1.0.1:
     resolution: {integrity: sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==}
     engines: {node: '>= 0.4'}
 
-  enhanced-resolve@5.18.2:
-    resolution: {integrity: sha512-6Jw4sE1maoRJo3q8MsSIn2onJFbLTOjY9hlx4DZXmOKvLRd1Ok2kXmAGXaafL2+ijsJZ1ClYbl/pmqr9+k4iUQ==}
+  enhanced-resolve@5.18.3:
+    resolution: {integrity: sha512-d4lC8xfavMeBjzGr2vECC3fsGXziXZQyJxD868h2M/mBI3PwAuODxAkLkq5HYuvrPYcUtiLzsTo8U3PgX3Ocww==}
     engines: {node: '>=10.13.0'}
 
-  error-ex@1.3.2:
-    resolution: {integrity: sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==}
+  error-ex@1.3.4:
+    resolution: {integrity: sha512-sqQamAnR14VgCr1A618A3sGrygcpK+HEbenA/HiEAkkUwcZIIB/tgWqHFxWgOyDh4nB4JCRimh79dR5Ywc9MDQ==}
 
   es-abstract@1.24.0:
     resolution: {integrity: sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==}
@@ -450,14 +496,14 @@ packages:
     peerDependencies:
       eslint: '>=8'
 
-  eslint-plugin-n@17.21.0:
-    resolution: {integrity: sha512-1+iZ8We4ZlwVMtb/DcHG3y5/bZOdazIpa/4TySo22MLKdwrLcfrX0hbadnCvykSQCCmkAnWmIP8jZVb2AAq29A==}
+  eslint-plugin-n@17.23.1:
+    resolution: {integrity: sha512-68PealUpYoHOBh332JLLD9Sj7OQUDkFpmcfqt8R9sySfFSeuGJjMTJQvCRRB96zO3A/PELRLkPrzsHmzEFQQ5A==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
       eslint: '>=8.23.0'
 
-  eslint-plugin-prettier@5.5.1:
-    resolution: {integrity: sha512-dobTkHT6XaEVOo8IO90Q4DOSxnm3Y151QxPJlM/vKC0bVy+d6cVWQZLlFiuZPP0wS6vZwSKeJgKkcS+KfMBlRw==}
+  eslint-plugin-prettier@5.5.4:
+    resolution: {integrity: sha512-swNtI95SToIz05YINMA6Ox5R057IMAmWZ26GqPxusAp1TZzj+IdY9tXNWWD3vkF/wEqydCONcwjTFpxybBqZsg==}
     engines: {node: ^14.18.0 || >=16.0.0}
     peerDependencies:
       '@types/eslint': '>=8.0.0'
@@ -482,8 +528,8 @@ packages:
     resolution: {integrity: sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  eslint@9.30.1:
-    resolution: {integrity: sha512-zmxXPNMOXmwm9E0yQLi5uqXHs7uq2UIiqEKo3Gq+3fwo1XrJ+hijAZImyF7hclW3E6oHz43Yk3RP8at6OTKflQ==}
+  eslint@9.38.0:
+    resolution: {integrity: sha512-t5aPOpmtJcZcz5UJyY2GbvpDlsK5E8JqRqoKtfiKE3cNh437KIqfJr3A3AKf5k64NPx6d0G3dno6XDY05PqPtw==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     hasBin: true
     peerDependencies:
@@ -516,6 +562,9 @@ packages:
     resolution: {integrity: sha512-jpWzZ1ZhwUmeWRhS7Qv3mhpOhLfwI+uAX4e5fOcXqwMR7EcJ0pj2kV1CVzHVMX/LphnKWD3LObjZCoJ71lKpHw==}
     engines: {node: ^18.19.0 || >=20.5.0}
 
+  fast-decode-uri-component@1.0.1:
+    resolution: {integrity: sha512-WKgKWg5eUxvRZGwW8FvfbaH7AXSh2cL+3j5fMGzUMCxWBJ3dV3a7Wz8y2f/uQ0e3B6WmodD3oS54jTQ9HVTIIg==}
+
   fast-deep-equal@3.1.3:
     resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}
 
@@ -529,9 +578,21 @@ packages:
   fast-json-stable-stringify@2.1.0:
     resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}
 
+  fast-json-stringify@6.1.1:
+    resolution: {integrity: sha512-DbgptncYEXZqDUOEl4krff4mUiVrTZZVI7BBrQR/T3BqMj/eM1flTC1Uk2uUoLcWCxjT95xKulV/Lc6hhOZsBQ==}
+
   fast-levenshtein@2.0.6:
     resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}
 
+  fast-querystring@1.1.2:
+    resolution: {integrity: sha512-g6KuKWmFXc0fID8WWH0jit4g0AGBoJhCkJMb1RmbsSEUNvQ+ZC8D6CUZ+GtF8nMzSPXnhiePyyqqipzNNEnHjg==}
+
+  fast-uri@3.1.0:
+    resolution: {integrity: sha512-iPeeDKJSWf4IEOasVVrknXpaBV0IApz/gp7S2bb7Z4Lljbl2MGJRqInZiUrQwV16cpzw/D3S5j5Julj/gT52AA==}
+
+  fastify@5.6.1:
+    resolution: {integrity: sha512-WjjlOciBF0K8pDUPZoGPhqhKrQJ02I8DKaDIfO51EL0kbSMwQFl85cRwhOvmSDWoukNOdTo27gLN549pLCcH7Q==}
+
   fastq@1.19.1:
     resolution: {integrity: sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==}
 
@@ -547,6 +608,10 @@ packages:
     resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}
     engines: {node: '>=8'}
 
+  find-my-way@9.3.0:
+    resolution: {integrity: sha512-eRoFWQw+Yv2tuYlK2pjFS2jGXSxSppAs3hSQjfxVKxM5amECzIgYYc1FEI8ZmhSh/Ig+FrKEz43NLRKJjYCZVg==}
+    engines: {node: '>=20'}
+
   find-up@5.0.0:
     resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}
     engines: {node: '>=10'}
@@ -572,6 +637,10 @@ packages:
   functions-have-names@1.2.3:
     resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}
 
+  generator-function@2.0.1:
+    resolution: {integrity: sha512-SFdFmIJi+ybC0vjlHN0ZGVGHc3lgE0DxPAT0djjVg+kjOnSqclqmj0KQ7ykTOLP6YxoqOvuAODGdcHJn+43q3g==}
+    engines: {node: '>= 0.4'}
+
   get-intrinsic@1.3.0:
     resolution: {integrity: sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==}
     engines: {node: '>= 0.4'}
@@ -588,8 +657,8 @@ packages:
     resolution: {integrity: sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==}
     engines: {node: '>= 0.4'}
 
-  get-tsconfig@4.10.1:
-    resolution: {integrity: sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==}
+  get-tsconfig@4.12.0:
+    resolution: {integrity: sha512-LScr2aNr2FbjAjZh2C6X6BxRx1/x+aTDExct/xyq2XKbYOiG5c0aK7pMsSuyc0brz3ibr/lbQiHD9jzt4lccJw==}
 
   glob-parent@5.1.2:
     resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
@@ -607,14 +676,17 @@ packages:
     resolution: {integrity: sha512-7ACyT3wmyp3I61S4fG682L0VA2RGD9otkqGJIwNUMF1SWUombIIk+af1unuDYgMm082aHYwD+mzJvv9Iu8dsgg==}
     engines: {node: '>=18'}
 
-  globals@16.3.0:
-    resolution: {integrity: sha512-bqWEnJ1Nt3neqx2q5SFfGS8r/ahumIakg3HcwtNlrVlwXIeNumWn/c7Pn/wKzGhf6SaW6H6uWXLqC30STCMchQ==}
+  globals@16.4.0:
+    resolution: {integrity: sha512-ob/2LcVVaVGCYN+r14cnwnoDPUufjiYgSqRhiFD0Q1iI4Odora5RE8Iv1D24hAz5oMophRGkGz+yuvQmmUMnMw==}
     engines: {node: '>=18'}
 
   globalthis@1.0.4:
     resolution: {integrity: sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==}
     engines: {node: '>= 0.4'}
 
+  globrex@0.1.2:
+    resolution: {integrity: sha512-uHJgbwAMwNFf5mLst7IWLNg14x1CkeqglJb/K3doi4dw6q2IvAAmM/Y81kevy83wP+Sst+nutFTYOGg3d1lsxg==}
+
   gopd@1.2.0:
     resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}
     engines: {node: '>= 0.4'}
@@ -663,6 +735,9 @@ packages:
     resolution: {integrity: sha512-eKCa6bwnJhvxj14kZk5NCPc6Hb6BdsU9DZcOnmQKSnO1VKrfV0zCvtttPZUsBvjmNDn8rpcJfpwSYnHBjc95MQ==}
     engines: {node: '>=18.18.0'}
 
+  humanize-ms@1.2.1:
+    resolution: {integrity: sha512-Fl70vYtsAFb/C06PTS9dZBo7ihau+Tu/DNCk/OyHhea07S+aeMWpFFkUaXRa8fI+ScZbEI8dfSxwY7gxZ9SAVQ==}
+
   ignore@5.3.2:
     resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}
     engines: {node: '>= 4'}
@@ -683,6 +758,10 @@ packages:
     resolution: {integrity: sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==}
     engines: {node: '>= 0.4'}
 
+  ipaddr.js@2.2.0:
+    resolution: {integrity: sha512-Ag3wB2o37wslZS19hZqorUnrnzSkpOVy+IiiDEiTqNubEYpYuHWIf6K4psgN2ZWKExS4xhVCrRVfb/wfW8fWJA==}
+    engines: {node: '>= 10'}
+
   is-array-buffer@3.0.5:
     resolution: {integrity: sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==}
     engines: {node: '>= 0.4'}
@@ -726,8 +805,8 @@ packages:
     resolution: {integrity: sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==}
     engines: {node: '>= 0.4'}
 
-  is-generator-function@1.1.0:
-    resolution: {integrity: sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==}
+  is-generator-function@1.1.2:
+    resolution: {integrity: sha512-upqt1SkGkODW9tsGNG5mtXTXtECizwtS2kA161M+gJPc1xdb/Ax629af6YrTwcOeQHbewrPNlE5Dx7kzvXTizA==}
     engines: {node: '>= 0.4'}
 
   is-glob@4.0.3:
@@ -814,9 +893,15 @@ packages:
   json-parse-better-errors@1.0.2:
     resolution: {integrity: sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==}
 
+  json-schema-ref-resolver@3.0.0:
+    resolution: {integrity: sha512-hOrZIVL5jyYFjzk7+y7n5JDzGlU8rfWDuYyHwGa2WA8/pcmMHezp2xsVwxrebD/Q9t8Nc5DboieySDpCp4WG4A==}
+
   json-schema-traverse@0.4.1:
     resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}
 
+  json-schema-traverse@1.0.0:
+    resolution: {integrity: sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==}
+
   json-stable-stringify-without-jsonify@1.0.1:
     resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}
 
@@ -827,6 +912,9 @@ packages:
     resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}
     engines: {node: '>= 0.8.0'}
 
+  light-my-request@6.6.0:
+    resolution: {integrity: sha512-CHYbu8RtboSIoVsHZ6Ye4cj4Aw/yg2oAFimlF7mNvfDV192LR7nDiKtSIfCuLT7KokPSTn/9kfVLm5OGN0A28A==}
+
   load-json-file@4.0.0:
     resolution: {integrity: sha512-Kx8hMakjX03tiGTLAIdJ+lL0htKnXjEZN6hk/tozf/WOuYGdZBJrZ+rCJRbVCugsjB3jMLn9746NsQIf5VjBMw==}
     engines: {node: '>=4'}
@@ -894,6 +982,10 @@ packages:
     resolution: {integrity: sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==}
     engines: {node: '>= 0.4'}
 
+  on-exit-leak-free@2.1.2:
+    resolution: {integrity: sha512-0eJJY6hXLGf1udHwfNftBqH+g73EU4B504nZeKpz1sYRKafAghwxEJunB2O7rDZkL4PGfsMVnTXZ2EjibbqcsA==}
+    engines: {node: '>=14.0.0'}
+
   optionator@0.9.4:
     resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}
     engines: {node: '>= 0.8.0'}
@@ -949,8 +1041,8 @@ packages:
     resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
     engines: {node: '>=8.6'}
 
-  picomatch@4.0.2:
-    resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}
+  picomatch@4.0.3:
+    resolution: {integrity: sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==}
     engines: {node: '>=12'}
 
   pidtree@0.3.1:
@@ -962,6 +1054,16 @@ packages:
     resolution: {integrity: sha512-C3FsVNH1udSEX48gGX1xfvwTWfsYWj5U+8/uK15BGzIGrKoUpghX8hWZwa/OFnakBiiVNmBvemTJR5mcy7iPcg==}
     engines: {node: '>=4'}
 
+  pino-abstract-transport@2.0.0:
+    resolution: {integrity: sha512-F63x5tizV6WCh4R6RHyi2Ml+M70DNRXt/+HANowMflpgGFMAym/VKm6G7ZOQRjqN7XbGxK1Lg9t6ZrtzOaivMw==}
+
+  pino-std-serializers@7.0.0:
+    resolution: {integrity: sha512-e906FRY0+tV27iq4juKzSYPbUj2do2X2JX4EzSca1631EB2QJQUqGbDuERal7LCtOpxl6x3+nvo9NPZcmjkiFA==}
+
+  pino@9.13.1:
+    resolution: {integrity: sha512-Szuj+ViDTjKPQYiKumGmEn3frdl+ZPSdosHyt9SnUevFosOkMY2b7ipxlEctNKPmMD/VibeBI+ZcZCJK+4DPuw==}
+    hasBin: true
+
   possible-typed-array-names@1.1.0:
     resolution: {integrity: sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==}
     engines: {node: '>= 0.4'}
@@ -979,10 +1081,16 @@ packages:
     engines: {node: '>=14'}
     hasBin: true
 
-  pretty-ms@9.2.0:
-    resolution: {integrity: sha512-4yf0QO/sllf/1zbZWYnvWw3NxCQwLXKzIj0G849LSufP15BXKM0rbD2Z3wVnkMfjdn/CB0Dpp444gYAACdsplg==}
+  pretty-ms@9.3.0:
+    resolution: {integrity: sha512-gjVS5hOP+M3wMm5nmNOucbIrqudzs9v/57bWRHQWLYklXqoXKrVfYW2W9+glfGsqtPgpiz5WwyEEB+ksXIx3gQ==}
     engines: {node: '>=18'}
 
+  process-warning@4.0.1:
+    resolution: {integrity: sha512-3c2LzQ3rY9d0hc1emcsHhfT9Jwz0cChib/QN89oME2R451w5fy3f0afAhERFZAwrbDU43wk12d0ORBpDVME50Q==}
+
+  process-warning@5.0.0:
+    resolution: {integrity: sha512-a39t9ApHNx2L4+HBnQKqxxHNs1r7KF+Intd8Q/g1bUh6q0WIp9voPXJ/x0j+ZL45KF1pJd9+q2jLIRMfvEshkA==}
+
   punycode@2.3.1:
     resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}
     engines: {node: '>=6'}
@@ -990,10 +1098,17 @@ packages:
   queue-microtask@1.2.3:
     resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}
 
+  quick-format-unescaped@4.0.4:
+    resolution: {integrity: sha512-tYC1Q1hgyRuHgloV/YXs2w15unPVh8qfu/qCTfhTYamaw7fyhumKa2yGpdSo87vY32rIclj+4fWYQXUMs9EHvg==}
+
   read-pkg@3.0.0:
     resolution: {integrity: sha512-BLq/cCO9two+lBgiTYNqD6GdtK8s4NpaWrl6/rCO9w0TUS8oJl7cmToOZfRYllKTISY6nt1U7jQ53brmKqY6BA==}
     engines: {node: '>=4'}
 
+  real-require@0.2.0:
+    resolution: {integrity: sha512-57frrGM/OCTLqLOAh0mhVA9VBMHd+9U7Zb2THMGdBUoZVOtGbJzjxsYGDJ3A9AYYCP4hn6y1TVbaOfzWtm5GFg==}
+    engines: {node: '>= 12.13.0'}
+
   reflect.getprototypeof@1.0.10:
     resolution: {integrity: sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==}
     engines: {node: '>= 0.4'}
@@ -1002,6 +1117,10 @@ packages:
     resolution: {integrity: sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==}
     engines: {node: '>= 0.4'}
 
+  require-from-string@2.0.2:
+    resolution: {integrity: sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==}
+    engines: {node: '>=0.10.0'}
+
   resolve-from@4.0.0:
     resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}
     engines: {node: '>=4'}
@@ -1014,10 +1133,17 @@ packages:
     engines: {node: '>= 0.4'}
     hasBin: true
 
+  ret@0.5.0:
+    resolution: {integrity: sha512-I1XxrZSQ+oErkRR4jYbAyEEu2I0avBvvMM5JN+6EBprOGRCs63ENqZ3vjavq8fBw2+62G5LF5XelKwuJpcvcxw==}
+    engines: {node: '>=10'}
+
   reusify@1.1.0:
     resolution: {integrity: sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==}
     engines: {iojs: '>=1.0.0', node: '>=0.10.0'}
 
+  rfdc@1.4.1:
+    resolution: {integrity: sha512-q1b3N5QkRUWUl7iyylaaj3kOpIT0N2i9MqIEQXP73GVsN9cw3fdx8X63cEmWhJGi2PPCF23Ijp7ktmd39rawIA==}
+
   run-parallel@1.2.0:
     resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}
 
@@ -1033,15 +1159,28 @@ packages:
     resolution: {integrity: sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==}
     engines: {node: '>= 0.4'}
 
+  safe-regex2@5.0.0:
+    resolution: {integrity: sha512-YwJwe5a51WlK7KbOJREPdjNrpViQBI3p4T50lfwPuDhZnE3XGVTlGvi+aolc5+RvxDD6bnUmjVsU9n1eboLUYw==}
+
+  safe-stable-stringify@2.5.0:
+    resolution: {integrity: sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==}
+    engines: {node: '>=10'}
+
+  secure-json-parse@4.1.0:
+    resolution: {integrity: sha512-l4KnYfEyqYJxDwlNVyRfO2E4NTHfMKAWdUuA8J0yve2Dz/E/PdBepY03RvyJpssIpRFwJoCD55wA+mEDs6ByWA==}
+
   semver@5.7.2:
     resolution: {integrity: sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==}
     hasBin: true
 
-  semver@7.7.2:
-    resolution: {integrity: sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==}
+  semver@7.7.3:
+    resolution: {integrity: sha512-SdsKMrI9TdgjdweUSR9MweHA4EJ8YxHn8DFaDisvhVlUOe4BF1tLD7GAj0lIqWVl+dPb/rExr0Btby5loQm20Q==}
     engines: {node: '>=10'}
     hasBin: true
 
+  set-cookie-parser@2.7.1:
+    resolution: {integrity: sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ==}
+
   set-function-length@1.2.2:
     resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}
     engines: {node: '>= 0.4'}
@@ -1094,6 +1233,12 @@ packages:
     resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}
     engines: {node: '>=14'}
 
+  slow-redact@0.3.1:
+    resolution: {integrity: sha512-NvFvl1GuLZNW4U046Tfi8b26zXo8aBzgCAS2f7yVJR/fArN93mOqSA99cB9uITm92ajSz01bsu1K7SCVVjIMpQ==}
+
+  sonic-boom@4.2.0:
+    resolution: {integrity: sha512-INb7TM37/mAcsGmc9hyyI6+QR3rR1zVRu36B0NeGXKnOOLiZOfER5SA+N7X7k3yUYRzLWafduTDvJAfDswwEww==}
+
   spdx-correct@3.2.0:
     resolution: {integrity: sha512-kN9dJbvnySHULIluDHy32WHRUu3Og7B9sbY7tsFLctQkIqnMh3hErYgdMjTYuqmcXX+lK5T1lnUt3G7zNswmZA==}
 
@@ -1103,8 +1248,12 @@ packages:
   spdx-expression-parse@3.0.1:
     resolution: {integrity: sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==}
 
-  spdx-license-ids@3.0.21:
-    resolution: {integrity: sha512-Bvg/8F5XephndSK3JffaRqdT+gyhfqIPwDHpX80tJrF8QQRYMo8sNMeaZ2Dp5+jhwKnUmIOyFFQfHRkjJm5nXg==}
+  spdx-license-ids@3.0.22:
+    resolution: {integrity: sha512-4PRT4nh1EImPbt2jASOKHX7PB7I+e4IWNLvkKFDxNhJlfjbYlleYQh285Z/3mPTHSAK/AvdMmw5BNNuYH8ShgQ==}
+
+  split2@4.2.0:
+    resolution: {integrity: sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==}
+    engines: {node: '>= 10.x'}
 
   stop-iteration-iterator@1.1.0:
     resolution: {integrity: sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==}
@@ -1150,18 +1299,25 @@ packages:
     resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
     engines: {node: '>= 0.4'}
 
-  synckit@0.11.8:
-    resolution: {integrity: sha512-+XZ+r1XGIJGeQk3VvXhT6xx/VpbHsRzsTkGgF6E5RX9TTXD0118l87puaEBZ566FhqblC6U0d4XnubznJDm30A==}
+  synckit@0.11.11:
+    resolution: {integrity: sha512-MeQTA1r0litLUf0Rp/iisCaL8761lKAZHaimlbGK4j0HysC4PLfqygQj9srcs0m2RdtDYnF8UuYyKpbjHYp7Jw==}
     engines: {node: ^14.18.0 || >=16.0.0}
 
-  tapable@2.2.2:
-    resolution: {integrity: sha512-Re10+NauLTMCudc7T5WLFLAwDhQ0JWdrMK+9B2M8zR5hRExKmsRDCBA7/aV/pNJFltmBFO5BAMlQFi/vq3nKOg==}
+  tapable@2.3.0:
+    resolution: {integrity: sha512-g9ljZiwki/LfxmQADO3dEY1CbpmXT5Hm2fJ+QaGKwSXUylMybePR7/67YW7jOrrvjEgL1Fmz5kzyAjWVWLlucg==}
     engines: {node: '>=6'}
 
+  thread-stream@3.1.0:
+    resolution: {integrity: sha512-OqyPZ9u96VohAyMfJykzmivOrY2wfMSf3C5TtFJVgN+Hm6aj+voFhlK+kZEIv2FBh1X6Xp3DlnCOfEQ3B2J86A==}
+
   to-regex-range@5.0.1:
     resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
     engines: {node: '>=8.0'}
 
+  toad-cache@3.7.0:
+    resolution: {integrity: sha512-/m8M+2BJUpoJdgAHoG+baCwBT+tf2VraSfkBgl0Y00qIWt41DJ8R5B8nsEw0I58YwF5IZH6z24/2TobDKnqSWw==}
+    engines: {node: '>=12'}
+
   ts-api-utils@2.1.0:
     resolution: {integrity: sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==}
     engines: {node: '>=18.12'}
@@ -1177,6 +1333,10 @@ packages:
     resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}
     engines: {node: '>= 0.8.0'}
 
+  type-fest@4.41.0:
+    resolution: {integrity: sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==}
+    engines: {node: '>=16'}
+
   typed-array-buffer@1.0.3:
     resolution: {integrity: sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==}
     engines: {node: '>= 0.4'}
@@ -1193,12 +1353,12 @@ packages:
     resolution: {integrity: sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==}
     engines: {node: '>= 0.4'}
 
-  typescript-eslint@8.36.0:
-    resolution: {integrity: sha512-fTCqxthY+h9QbEgSIBfL9iV6CvKDFuoxg6bHPNpJ9HIUzS+jy2lCEyCmGyZRWEBSaykqcDPf1SJ+BfCI8DRopA==}
+  typescript-eslint@8.46.0:
+    resolution: {integrity: sha512-6+ZrB6y2bT2DX3K+Qd9vn7OFOJR+xSLDj+Aw/N3zBwUt27uTw2sw2TE2+UcY1RiyBZkaGbTkVg9SSdPNUG6aUw==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
       eslint: ^8.57.0 || ^9.0.0
-      typescript: '>=4.8.4 <5.9.0'
+      typescript: '>=4.8.4 <6.0.0'
 
   typescript@5.8.3:
     resolution: {integrity: sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==}
@@ -1209,8 +1369,8 @@ packages:
     resolution: {integrity: sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==}
     engines: {node: '>= 0.4'}
 
-  undici-types@7.8.0:
-    resolution: {integrity: sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==}
+  undici-types@7.14.0:
+    resolution: {integrity: sha512-QQiYxHuyZ9gQUIrmPo3IA+hUl4KYk8uSA7cHrcKd/l3p1OTpZcM0Tbp9x7FAtXdAYhlasd60ncPpgu6ihG6TOA==}
 
   unicorn-magic@0.3.0:
     resolution: {integrity: sha512-+QBBXBCvifc56fsbuxZQ6Sic3wqqc3WWaqxs58gvJrcOuN83HGTCwz3oS5phzU9LthRNE9VrJCFCLUgHeeFnfA==}
@@ -1255,41 +1415,39 @@ packages:
     resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
     engines: {node: '>=10'}
 
-  yoctocolors@2.1.1:
-    resolution: {integrity: sha512-GQHQqAopRhwU8Kt1DDM8NjibDXHC8eoh1erhGAJPEyveY9qqVeXvVikNKrDz69sHowPMorbPUrH/mx8c50eiBQ==}
+  yoctocolors@2.1.2:
+    resolution: {integrity: sha512-CzhO+pFNo8ajLM2d2IW/R93ipy99LWjtwblvC1RsoSUMZgyLbYFr221TnSNT7GjGdYui6P459mw9JH/g/zW2ug==}
     engines: {node: '>=18'}
 
 snapshots:
 
-  '@eslint-community/eslint-utils@4.7.0(eslint@9.30.1)':
+  '@eslint-community/eslint-utils@4.9.0(eslint@9.38.0)':
     dependencies:
-      eslint: 9.30.1
+      eslint: 9.38.0
       eslint-visitor-keys: 3.4.3
 
   '@eslint-community/regexpp@4.12.1': {}
 
-  '@eslint/config-array@0.21.0':
+  '@eslint/config-array@0.21.1':
     dependencies:
-      '@eslint/object-schema': 2.1.6
-      debug: 4.4.1
+      '@eslint/object-schema': 2.1.7
+      debug: 4.4.3
       minimatch: 3.1.2
     transitivePeerDependencies:
       - supports-color
 
-  '@eslint/config-helpers@0.3.0': {}
-
-  '@eslint/core@0.14.0':
+  '@eslint/config-helpers@0.4.1':
     dependencies:
-      '@types/json-schema': 7.0.15
+      '@eslint/core': 0.16.0
 
-  '@eslint/core@0.15.1':
+  '@eslint/core@0.16.0':
     dependencies:
       '@types/json-schema': 7.0.15
 
   '@eslint/eslintrc@3.3.1':
     dependencies:
       ajv: 6.12.6
-      debug: 4.4.1
+      debug: 4.4.3
       espree: 10.4.0
       globals: 14.0.0
       ignore: 5.3.2
@@ -1300,30 +1458,62 @@ snapshots:
     transitivePeerDependencies:
       - supports-color
 
-  '@eslint/js@9.30.1': {}
+  '@eslint/js@9.38.0': {}
 
-  '@eslint/object-schema@2.1.6': {}
+  '@eslint/object-schema@2.1.7': {}
 
-  '@eslint/plugin-kit@0.3.3':
+  '@eslint/plugin-kit@0.4.0':
     dependencies:
-      '@eslint/core': 0.15.1
+      '@eslint/core': 0.16.0
       levn: 0.4.1
 
-  '@giltayar/functional-commons@1.4.2': {}
+  '@fastify/ajv-compiler@4.0.2':
+    dependencies:
+      ajv: 8.17.1
+      ajv-formats: 3.0.1(ajv@8.17.1)
+      fast-uri: 3.1.0
+
+  '@fastify/error@4.2.0': {}
+
+  '@fastify/fast-json-stringify-compiler@5.0.3':
+    dependencies:
+      fast-json-stringify: 6.1.1
+
+  '@fastify/forwarded@3.0.1': {}
+
+  '@fastify/merge-json-schemas@0.2.1':
+    dependencies:
+      dequal: 2.0.3
+
+  '@fastify/proxy-addr@5.1.0':
+    dependencies:
+      '@fastify/forwarded': 3.0.1
+      ipaddr.js: 2.2.0
+
+  '@giltayar/functional-commons@2.1.0': {}
+
+  '@giltayar/http-commons@3.1.1':
+    dependencies:
+      '@giltayar/functional-commons': 2.1.0
+      '@giltayar/promise-commons': 2.0.0
+      agentkeepalive: 4.6.0
+      fastify: 5.6.1
+      lodash.merge: 4.6.2
+      type-fest: 4.41.0
+
+  '@giltayar/promise-commons@2.0.0': {}
 
-  '@giltayar/service-commons@1.1.2': {}
+  '@giltayar/service-commons@1.1.3': {}
 
   '@humanfs/core@0.19.1': {}
 
-  '@humanfs/node@0.16.6':
+  '@humanfs/node@0.16.7':
     dependencies:
       '@humanfs/core': 0.19.1
-      '@humanwhocodes/retry': 0.3.1
+      '@humanwhocodes/retry': 0.4.3
 
   '@humanwhocodes/module-importer@1.0.1': {}
 
-  '@humanwhocodes/retry@0.3.1': {}
-
   '@humanwhocodes/retry@0.4.3': {}
 
   '@nodelib/fs.scandir@2.1.5':
@@ -1338,7 +1528,7 @@ snapshots:
       '@nodelib/fs.scandir': 2.1.5
       fastq: 1.19.1
 
-  '@pkgr/core@0.2.7': {}
+  '@pkgr/core@0.2.9': {}
 
   '@sec-ant/readable-stream@0.4.1': {}
 
@@ -1348,19 +1538,19 @@ snapshots:
 
   '@types/json-schema@7.0.15': {}
 
-  '@types/node@24.0.13':
+  '@types/node@24.8.1':
     dependencies:
-      undici-types: 7.8.0
+      undici-types: 7.14.0
 
-  '@typescript-eslint/eslint-plugin@8.36.0(@typescript-eslint/parser@8.36.0(eslint@9.30.1)(typescript@5.8.3))(eslint@9.30.1)(typescript@5.8.3)':
+  '@typescript-eslint/eslint-plugin@8.46.0(@typescript-eslint/parser@8.46.0(eslint@9.38.0)(typescript@5.8.3))(eslint@9.38.0)(typescript@5.8.3)':
     dependencies:
       '@eslint-community/regexpp': 4.12.1
-      '@typescript-eslint/parser': 8.36.0(eslint@9.30.1)(typescript@5.8.3)
-      '@typescript-eslint/scope-manager': 8.36.0
-      '@typescript-eslint/type-utils': 8.36.0(eslint@9.30.1)(typescript@5.8.3)
-      '@typescript-eslint/utils': 8.36.0(eslint@9.30.1)(typescript@5.8.3)
-      '@typescript-eslint/visitor-keys': 8.36.0
-      eslint: 9.30.1
+      '@typescript-eslint/parser': 8.46.0(eslint@9.38.0)(typescript@5.8.3)
+      '@typescript-eslint/scope-manager': 8.46.0
+      '@typescript-eslint/type-utils': 8.46.0(eslint@9.38.0)(typescript@5.8.3)
+      '@typescript-eslint/utils': 8.46.0(eslint@9.38.0)(typescript@5.8.3)
+      '@typescript-eslint/visitor-keys': 8.46.0
+      eslint: 9.38.0
       graphemer: 1.4.0
       ignore: 7.0.5
       natural-compare: 1.4.0
@@ -1369,111 +1559,114 @@ snapshots:
     transitivePeerDependencies:
       - supports-color
 
-  '@typescript-eslint/parser@8.36.0(eslint@9.30.1)(typescript@5.8.3)':
+  '@typescript-eslint/parser@8.46.0(eslint@9.38.0)(typescript@5.8.3)':
     dependencies:
-      '@typescript-eslint/scope-manager': 8.36.0
-      '@typescript-eslint/types': 8.36.0
-      '@typescript-eslint/typescript-estree': 8.36.0(typescript@5.8.3)
-      '@typescript-eslint/visitor-keys': 8.36.0
-      debug: 4.4.1
-      eslint: 9.30.1
+      '@typescript-eslint/scope-manager': 8.46.0
+      '@typescript-eslint/types': 8.46.0
+      '@typescript-eslint/typescript-estree': 8.46.0(typescript@5.8.3)
+      '@typescript-eslint/visitor-keys': 8.46.0
+      debug: 4.4.3
+      eslint: 9.38.0
       typescript: 5.8.3
     transitivePeerDependencies:
       - supports-color
 
-  '@typescript-eslint/project-service@8.36.0(typescript@5.8.3)':
+  '@typescript-eslint/project-service@8.46.0(typescript@5.8.3)':
     dependencies:
-      '@typescript-eslint/tsconfig-utils': 8.36.0(typescript@5.8.3)
-      '@typescript-eslint/types': 8.36.0
-      debug: 4.4.1
+      '@typescript-eslint/tsconfig-utils': 8.46.0(typescript@5.8.3)
+      '@typescript-eslint/types': 8.46.0
+      debug: 4.4.3
       typescript: 5.8.3
     transitivePeerDependencies:
       - supports-color
 
-  '@typescript-eslint/scope-manager@8.36.0':
+  '@typescript-eslint/scope-manager@8.46.0':
     dependencies:
-      '@typescript-eslint/types': 8.36.0
-      '@typescript-eslint/visitor-keys': 8.36.0
+      '@typescript-eslint/types': 8.46.0
+      '@typescript-eslint/visitor-keys': 8.46.0
 
-  '@typescript-eslint/tsconfig-utils@8.36.0(typescript@5.8.3)':
+  '@typescript-eslint/tsconfig-utils@8.46.0(typescript@5.8.3)':
     dependencies:
       typescript: 5.8.3
 
-  '@typescript-eslint/type-utils@8.36.0(eslint@9.30.1)(typescript@5.8.3)':
+  '@typescript-eslint/type-utils@8.46.0(eslint@9.38.0)(typescript@5.8.3)':
     dependencies:
-      '@typescript-eslint/typescript-estree': 8.36.0(typescript@5.8.3)
-      '@typescript-eslint/utils': 8.36.0(eslint@9.30.1)(typescript@5.8.3)
-      debug: 4.4.1
-      eslint: 9.30.1
+      '@typescript-eslint/types': 8.46.0
+      '@typescript-eslint/typescript-estree': 8.46.0(typescript@5.8.3)
+      '@typescript-eslint/utils': 8.46.0(eslint@9.38.0)(typescript@5.8.3)
+      debug: 4.4.3
+      eslint: 9.38.0
       ts-api-utils: 2.1.0(typescript@5.8.3)
       typescript: 5.8.3
     transitivePeerDependencies:
       - supports-color
 
-  '@typescript-eslint/types@8.36.0': {}
+  '@typescript-eslint/types@8.46.0': {}
 
-  '@typescript-eslint/typescript-estree@8.36.0(typescript@5.8.3)':
+  '@typescript-eslint/typescript-estree@8.46.0(typescript@5.8.3)':
     dependencies:
-      '@typescript-eslint/project-service': 8.36.0(typescript@5.8.3)
-      '@typescript-eslint/tsconfig-utils': 8.36.0(typescript@5.8.3)
-      '@typescript-eslint/types': 8.36.0
-      '@typescript-eslint/visitor-keys': 8.36.0
-      debug: 4.4.1
+      '@typescript-eslint/project-service': 8.46.0(typescript@5.8.3)
+      '@typescript-eslint/tsconfig-utils': 8.46.0(typescript@5.8.3)
+      '@typescript-eslint/types': 8.46.0
+      '@typescript-eslint/visitor-keys': 8.46.0
+      debug: 4.4.3
       fast-glob: 3.3.3
       is-glob: 4.0.3
       minimatch: 9.0.5
-      semver: 7.7.2
+      semver: 7.7.3
       ts-api-utils: 2.1.0(typescript@5.8.3)
       typescript: 5.8.3
     transitivePeerDependencies:
       - supports-color
 
-  '@typescript-eslint/utils@8.36.0(eslint@9.30.1)(typescript@5.8.3)':
+  '@typescript-eslint/utils@8.46.0(eslint@9.38.0)(typescript@5.8.3)':
     dependencies:
-      '@eslint-community/eslint-utils': 4.7.0(eslint@9.30.1)
-      '@typescript-eslint/scope-manager': 8.36.0
-      '@typescript-eslint/types': 8.36.0
-      '@typescript-eslint/typescript-estree': 8.36.0(typescript@5.8.3)
-      eslint: 9.30.1
+      '@eslint-community/eslint-utils': 4.9.0(eslint@9.38.0)
+      '@typescript-eslint/scope-manager': 8.46.0
+      '@typescript-eslint/types': 8.46.0
+      '@typescript-eslint/typescript-estree': 8.46.0(typescript@5.8.3)
+      eslint: 9.38.0
       typescript: 5.8.3
     transitivePeerDependencies:
       - supports-color
 
-  '@typescript-eslint/visitor-keys@8.36.0':
+  '@typescript-eslint/visitor-keys@8.46.0':
     dependencies:
-      '@typescript-eslint/types': 8.36.0
+      '@typescript-eslint/types': 8.46.0
       eslint-visitor-keys: 4.2.1
 
-  '@typescript/native-preview-darwin-arm64@7.0.0-dev.20250630.1':
+  '@typescript/native-preview-darwin-arm64@7.0.0-dev.20251018.1':
     optional: true
 
-  '@typescript/native-preview-darwin-x64@7.0.0-dev.20250630.1':
+  '@typescript/native-preview-darwin-x64@7.0.0-dev.20251018.1':
     optional: true
 
-  '@typescript/native-preview-linux-arm64@7.0.0-dev.20250630.1':
+  '@typescript/native-preview-linux-arm64@7.0.0-dev.20251018.1':
     optional: true
 
-  '@typescript/native-preview-linux-arm@7.0.0-dev.20250630.1':
+  '@typescript/native-preview-linux-arm@7.0.0-dev.20251018.1':
     optional: true
 
-  '@typescript/native-preview-linux-x64@7.0.0-dev.20250630.1':
+  '@typescript/native-preview-linux-x64@7.0.0-dev.20251018.1':
     optional: true
 
-  '@typescript/native-preview-win32-arm64@7.0.0-dev.20250630.1':
+  '@typescript/native-preview-win32-arm64@7.0.0-dev.20251018.1':
     optional: true
 
-  '@typescript/native-preview-win32-x64@7.0.0-dev.20250630.1':
+  '@typescript/native-preview-win32-x64@7.0.0-dev.20251018.1':
     optional: true
 
-  '@typescript/native-preview@7.0.0-dev.20250630.1':
+  '@typescript/native-preview@7.0.0-dev.20251018.1':
     optionalDependencies:
-      '@typescript/native-preview-darwin-arm64': 7.0.0-dev.20250630.1
-      '@typescript/native-preview-darwin-x64': 7.0.0-dev.20250630.1
-      '@typescript/native-preview-linux-arm': 7.0.0-dev.20250630.1
-      '@typescript/native-preview-linux-arm64': 7.0.0-dev.20250630.1
-      '@typescript/native-preview-linux-x64': 7.0.0-dev.20250630.1
-      '@typescript/native-preview-win32-arm64': 7.0.0-dev.20250630.1
-      '@typescript/native-preview-win32-x64': 7.0.0-dev.20250630.1
+      '@typescript/native-preview-darwin-arm64': 7.0.0-dev.20251018.1
+      '@typescript/native-preview-darwin-x64': 7.0.0-dev.20251018.1
+      '@typescript/native-preview-linux-arm': 7.0.0-dev.20251018.1
+      '@typescript/native-preview-linux-arm64': 7.0.0-dev.20251018.1
+      '@typescript/native-preview-linux-x64': 7.0.0-dev.20251018.1
+      '@typescript/native-preview-win32-arm64': 7.0.0-dev.20251018.1
+      '@typescript/native-preview-win32-x64': 7.0.0-dev.20251018.1
+
+  abstract-logging@2.0.1: {}
 
   acorn-jsx@5.3.2(acorn@8.15.0):
     dependencies:
@@ -1481,6 +1674,14 @@ snapshots:
 
   acorn@8.15.0: {}
 
+  agentkeepalive@4.6.0:
+    dependencies:
+      humanize-ms: 1.2.1
+
+  ajv-formats@3.0.1(ajv@8.17.1):
+    optionalDependencies:
+      ajv: 8.17.1
+
   ajv@6.12.6:
     dependencies:
       fast-deep-equal: 3.1.3
@@ -1488,6 +1689,13 @@ snapshots:
       json-schema-traverse: 0.4.1
       uri-js: 4.4.1
 
+  ajv@8.17.1:
+    dependencies:
+      fast-deep-equal: 3.1.3
+      fast-uri: 3.1.0
+      json-schema-traverse: 1.0.0
+      require-from-string: 2.0.2
+
   ansi-styles@3.2.1:
     dependencies:
       color-convert: 1.9.3
@@ -1515,10 +1723,17 @@ snapshots:
 
   async-function@1.0.0: {}
 
+  atomic-sleep@1.0.0: {}
+
   available-typed-arrays@1.0.7:
     dependencies:
       possible-typed-array-names: 1.1.0
 
+  avvio@9.1.0:
+    dependencies:
+      '@fastify/error': 4.2.0
+      fastq: 1.19.1
+
   balanced-match@1.0.2: {}
 
   brace-expansion@1.1.12:
@@ -1578,6 +1793,8 @@ snapshots:
 
   concat-map@0.0.1: {}
 
+  cookie@1.0.2: {}
+
   cross-spawn@6.0.6:
     dependencies:
       nice-try: 1.0.5
@@ -1610,7 +1827,7 @@ snapshots:
       es-errors: 1.3.0
       is-data-view: 1.0.2
 
-  debug@4.4.1:
+  debug@4.4.3:
     dependencies:
       ms: 2.1.3
 
@@ -1628,18 +1845,20 @@ snapshots:
       has-property-descriptors: 1.0.2
       object-keys: 1.1.1
 
+  dequal@2.0.3: {}
+
   dunder-proto@1.0.1:
     dependencies:
       call-bind-apply-helpers: 1.0.2
       es-errors: 1.3.0
       gopd: 1.2.0
 
-  enhanced-resolve@5.18.2:
+  enhanced-resolve@5.18.3:
     dependencies:
       graceful-fs: 4.2.11
-      tapable: 2.2.2
+      tapable: 2.3.0
 
-  error-ex@1.3.2:
+  error-ex@1.3.4:
     dependencies:
       is-arrayish: 0.2.1
 
@@ -1725,39 +1944,39 @@ snapshots:
 
   escape-string-regexp@4.0.0: {}
 
-  eslint-compat-utils@0.5.1(eslint@9.30.1):
+  eslint-compat-utils@0.5.1(eslint@9.38.0):
     dependencies:
-      eslint: 9.30.1
-      semver: 7.7.2
+      eslint: 9.38.0
+      semver: 7.7.3
 
-  eslint-plugin-es-x@7.8.0(eslint@9.30.1):
+  eslint-plugin-es-x@7.8.0(eslint@9.38.0):
     dependencies:
-      '@eslint-community/eslint-utils': 4.7.0(eslint@9.30.1)
+      '@eslint-community/eslint-utils': 4.9.0(eslint@9.38.0)
       '@eslint-community/regexpp': 4.12.1
-      eslint: 9.30.1
-      eslint-compat-utils: 0.5.1(eslint@9.30.1)
+      eslint: 9.38.0
+      eslint-compat-utils: 0.5.1(eslint@9.38.0)
 
-  eslint-plugin-n@17.21.0(eslint@9.30.1)(typescript@5.8.3):
+  eslint-plugin-n@17.23.1(eslint@9.38.0)(typescript@5.8.3):
     dependencies:
-      '@eslint-community/eslint-utils': 4.7.0(eslint@9.30.1)
-      enhanced-resolve: 5.18.2
-      eslint: 9.30.1
-      eslint-plugin-es-x: 7.8.0(eslint@9.30.1)
-      get-tsconfig: 4.10.1
+      '@eslint-community/eslint-utils': 4.9.0(eslint@9.38.0)
+      enhanced-resolve: 5.18.3
+      eslint: 9.38.0
+      eslint-plugin-es-x: 7.8.0(eslint@9.38.0)
+      get-tsconfig: 4.12.0
       globals: 15.15.0
+      globrex: 0.1.2
       ignore: 5.3.2
-      minimatch: 9.0.5
-      semver: 7.7.2
+      semver: 7.7.3
       ts-declaration-location: 1.0.7(typescript@5.8.3)
     transitivePeerDependencies:
       - typescript
 
-  eslint-plugin-prettier@5.5.1(eslint@9.30.1)(prettier@3.6.2):
+  eslint-plugin-prettier@5.5.4(eslint@9.38.0)(prettier@3.6.2):
     dependencies:
-      eslint: 9.30.1
+      eslint: 9.38.0
       prettier: 3.6.2
       prettier-linter-helpers: 1.0.0
-      synckit: 0.11.8
+      synckit: 0.11.11
 
   eslint-scope@8.4.0:
     dependencies:
@@ -1768,25 +1987,24 @@ snapshots:
 
   eslint-visitor-keys@4.2.1: {}
 
-  eslint@9.30.1:
+  eslint@9.38.0:
     dependencies:
-      '@eslint-community/eslint-utils': 4.7.0(eslint@9.30.1)
+      '@eslint-community/eslint-utils': 4.9.0(eslint@9.38.0)
       '@eslint-community/regexpp': 4.12.1
-      '@eslint/config-array': 0.21.0
-      '@eslint/config-helpers': 0.3.0
-      '@eslint/core': 0.14.0
+      '@eslint/config-array': 0.21.1
+      '@eslint/config-helpers': 0.4.1
+      '@eslint/core': 0.16.0
       '@eslint/eslintrc': 3.3.1
-      '@eslint/js': 9.30.1
-      '@eslint/plugin-kit': 0.3.3
-      '@humanfs/node': 0.16.6
+      '@eslint/js': 9.38.0
+      '@eslint/plugin-kit': 0.4.0
+      '@humanfs/node': 0.16.7
       '@humanwhocodes/module-importer': 1.0.1
       '@humanwhocodes/retry': 0.4.3
       '@types/estree': 1.0.8
-      '@types/json-schema': 7.0.15
       ajv: 6.12.6
       chalk: 4.1.2
       cross-spawn: 7.0.6
-      debug: 4.4.1
+      debug: 4.4.3
       escape-string-regexp: 4.0.0
       eslint-scope: 8.4.0
       eslint-visitor-keys: 4.2.1
@@ -1836,10 +2054,12 @@ snapshots:
       is-plain-obj: 4.1.0
       is-stream: 4.0.1
       npm-run-path: 6.0.0
-      pretty-ms: 9.2.0
+      pretty-ms: 9.3.0
       signal-exit: 4.1.0
       strip-final-newline: 4.0.0
-      yoctocolors: 2.1.1
+      yoctocolors: 2.1.2
+
+  fast-decode-uri-component@1.0.1: {}
 
   fast-deep-equal@3.1.3: {}
 
@@ -1855,8 +2075,41 @@ snapshots:
 
   fast-json-stable-stringify@2.1.0: {}
 
+  fast-json-stringify@6.1.1:
+    dependencies:
+      '@fastify/merge-json-schemas': 0.2.1
+      ajv: 8.17.1
+      ajv-formats: 3.0.1(ajv@8.17.1)
+      fast-uri: 3.1.0
+      json-schema-ref-resolver: 3.0.0
+      rfdc: 1.4.1
+
   fast-levenshtein@2.0.6: {}
 
+  fast-querystring@1.1.2:
+    dependencies:
+      fast-decode-uri-component: 1.0.1
+
+  fast-uri@3.1.0: {}
+
+  fastify@5.6.1:
+    dependencies:
+      '@fastify/ajv-compiler': 4.0.2
+      '@fastify/error': 4.2.0
+      '@fastify/fast-json-stringify-compiler': 5.0.3
+      '@fastify/proxy-addr': 5.1.0
+      abstract-logging: 2.0.1
+      avvio: 9.1.0
+      fast-json-stringify: 6.1.1
+      find-my-way: 9.3.0
+      light-my-request: 6.6.0
+      pino: 9.13.1
+      process-warning: 5.0.0
+      rfdc: 1.4.1
+      secure-json-parse: 4.1.0
+      semver: 7.7.3
+      toad-cache: 3.7.0
+
   fastq@1.19.1:
     dependencies:
       reusify: 1.1.0
@@ -1873,6 +2126,12 @@ snapshots:
     dependencies:
       to-regex-range: 5.0.1
 
+  find-my-way@9.3.0:
+    dependencies:
+      fast-deep-equal: 3.1.3
+      fast-querystring: 1.1.2
+      safe-regex2: 5.0.0
+
   find-up@5.0.0:
     dependencies:
       locate-path: 6.0.0
@@ -1902,6 +2161,8 @@ snapshots:
 
   functions-have-names@1.2.3: {}
 
+  generator-function@2.0.1: {}
+
   get-intrinsic@1.3.0:
     dependencies:
       call-bind-apply-helpers: 1.0.2
@@ -1931,7 +2192,7 @@ snapshots:
       es-errors: 1.3.0
       get-intrinsic: 1.3.0
 
-  get-tsconfig@4.10.1:
+  get-tsconfig@4.12.0:
     dependencies:
       resolve-pkg-maps: 1.0.0
 
@@ -1947,13 +2208,15 @@ snapshots:
 
   globals@15.15.0: {}
 
-  globals@16.3.0: {}
+  globals@16.4.0: {}
 
   globalthis@1.0.4:
     dependencies:
       define-properties: 1.2.1
       gopd: 1.2.0
 
+  globrex@0.1.2: {}
+
   gopd@1.2.0: {}
 
   graceful-fs@4.2.11: {}
@@ -1988,6 +2251,10 @@ snapshots:
 
   human-signals@8.0.1: {}
 
+  humanize-ms@1.2.1:
+    dependencies:
+      ms: 2.1.3
+
   ignore@5.3.2: {}
 
   ignore@7.0.5: {}
@@ -2005,6 +2272,8 @@ snapshots:
       hasown: 2.0.2
       side-channel: 1.1.0
 
+  ipaddr.js@2.2.0: {}
+
   is-array-buffer@3.0.5:
     dependencies:
       call-bind: 1.0.8
@@ -2053,9 +2322,10 @@ snapshots:
     dependencies:
       call-bound: 1.0.4
 
-  is-generator-function@1.1.0:
+  is-generator-function@1.1.2:
     dependencies:
       call-bound: 1.0.4
+      generator-function: 2.0.1
       get-proto: 1.0.1
       has-tostringtag: 1.0.2
       safe-regex-test: 1.1.0
@@ -2132,8 +2402,14 @@ snapshots:
 
   json-parse-better-errors@1.0.2: {}
 
+  json-schema-ref-resolver@3.0.0:
+    dependencies:
+      dequal: 2.0.3
+
   json-schema-traverse@0.4.1: {}
 
+  json-schema-traverse@1.0.0: {}
+
   json-stable-stringify-without-jsonify@1.0.1: {}
 
   keyv@4.5.4:
@@ -2145,6 +2421,12 @@ snapshots:
       prelude-ls: 1.2.1
       type-check: 0.4.0
 
+  light-my-request@6.6.0:
+    dependencies:
+      cookie: 1.0.2
+      process-warning: 4.0.1
+      set-cookie-parser: 2.7.1
+
   load-json-file@4.0.0:
     dependencies:
       graceful-fs: 4.2.11
@@ -2220,6 +2502,8 @@ snapshots:
       has-symbols: 1.1.0
       object-keys: 1.1.1
 
+  on-exit-leak-free@2.1.2: {}
+
   optionator@0.9.4:
     dependencies:
       deep-is: 0.1.4
@@ -2249,7 +2533,7 @@ snapshots:
 
   parse-json@4.0.0:
     dependencies:
-      error-ex: 1.3.2
+      error-ex: 1.3.4
       json-parse-better-errors: 1.0.2
 
   parse-ms@4.0.0: {}
@@ -2270,12 +2554,32 @@ snapshots:
 
   picomatch@2.3.1: {}
 
-  picomatch@4.0.2: {}
+  picomatch@4.0.3: {}
 
   pidtree@0.3.1: {}
 
   pify@3.0.0: {}
 
+  pino-abstract-transport@2.0.0:
+    dependencies:
+      split2: 4.2.0
+
+  pino-std-serializers@7.0.0: {}
+
+  pino@9.13.1:
+    dependencies:
+      atomic-sleep: 1.0.0
+      on-exit-leak-free: 2.1.2
+      pino-abstract-transport: 2.0.0
+      pino-std-serializers: 7.0.0
+      process-warning: 5.0.0
+      quick-format-unescaped: 4.0.4
+      real-require: 0.2.0
+      safe-stable-stringify: 2.5.0
+      slow-redact: 0.3.1
+      sonic-boom: 4.2.0
+      thread-stream: 3.1.0
+
   possible-typed-array-names@1.1.0: {}
 
   prelude-ls@1.2.1: {}
@@ -2286,20 +2590,28 @@ snapshots:
 
   prettier@3.6.2: {}
 
-  pretty-ms@9.2.0:
+  pretty-ms@9.3.0:
     dependencies:
       parse-ms: 4.0.0
 
+  process-warning@4.0.1: {}
+
+  process-warning@5.0.0: {}
+
   punycode@2.3.1: {}
 
   queue-microtask@1.2.3: {}
 
+  quick-format-unescaped@4.0.4: {}
+
   read-pkg@3.0.0:
     dependencies:
       load-json-file: 4.0.0
       normalize-package-data: 2.5.0
       path-type: 3.0.0
 
+  real-require@0.2.0: {}
+
   reflect.getprototypeof@1.0.10:
     dependencies:
       call-bind: 1.0.8
@@ -2320,6 +2632,8 @@ snapshots:
       gopd: 1.2.0
       set-function-name: 2.0.2
 
+  require-from-string@2.0.2: {}
+
   resolve-from@4.0.0: {}
 
   resolve-pkg-maps@1.0.0: {}
@@ -2330,8 +2644,12 @@ snapshots:
       path-parse: 1.0.7
       supports-preserve-symlinks-flag: 1.0.0
 
+  ret@0.5.0: {}
+
   reusify@1.1.0: {}
 
+  rfdc@1.4.1: {}
+
   run-parallel@1.2.0:
     dependencies:
       queue-microtask: 1.2.3
@@ -2355,9 +2673,19 @@ snapshots:
       es-errors: 1.3.0
       is-regex: 1.2.1
 
+  safe-regex2@5.0.0:
+    dependencies:
+      ret: 0.5.0
+
+  safe-stable-stringify@2.5.0: {}
+
+  secure-json-parse@4.1.0: {}
+
   semver@5.7.2: {}
 
-  semver@7.7.2: {}
+  semver@7.7.3: {}
+
+  set-cookie-parser@2.7.1: {}
 
   set-function-length@1.2.2:
     dependencies:
@@ -2425,19 +2753,27 @@ snapshots:
 
   signal-exit@4.1.0: {}
 
+  slow-redact@0.3.1: {}
+
+  sonic-boom@4.2.0:
+    dependencies:
+      atomic-sleep: 1.0.0
+
   spdx-correct@3.2.0:
     dependencies:
       spdx-expression-parse: 3.0.1
-      spdx-license-ids: 3.0.21
+      spdx-license-ids: 3.0.22
 
   spdx-exceptions@2.5.0: {}
 
   spdx-expression-parse@3.0.1:
     dependencies:
       spdx-exceptions: 2.5.0
-      spdx-license-ids: 3.0.21
+      spdx-license-ids: 3.0.22
+
+  spdx-license-ids@3.0.22: {}
 
-  spdx-license-ids@3.0.21: {}
+  split2@4.2.0: {}
 
   stop-iteration-iterator@1.1.0:
     dependencies:
@@ -2490,29 +2826,37 @@ snapshots:
 
   supports-preserve-symlinks-flag@1.0.0: {}
 
-  synckit@0.11.8:
+  synckit@0.11.11:
     dependencies:
-      '@pkgr/core': 0.2.7
+      '@pkgr/core': 0.2.9
 
-  tapable@2.2.2: {}
+  tapable@2.3.0: {}
+
+  thread-stream@3.1.0:
+    dependencies:
+      real-require: 0.2.0
 
   to-regex-range@5.0.1:
     dependencies:
       is-number: 7.0.0
 
+  toad-cache@3.7.0: {}
+
   ts-api-utils@2.1.0(typescript@5.8.3):
     dependencies:
       typescript: 5.8.3
 
   ts-declaration-location@1.0.7(typescript@5.8.3):
     dependencies:
-      picomatch: 4.0.2
+      picomatch: 4.0.3
       typescript: 5.8.3
 
   type-check@0.4.0:
     dependencies:
       prelude-ls: 1.2.1
 
+  type-fest@4.41.0: {}
+
   typed-array-buffer@1.0.3:
     dependencies:
       call-bound: 1.0.4
@@ -2546,12 +2890,13 @@ snapshots:
       possible-typed-array-names: 1.1.0
       reflect.getprototypeof: 1.0.10
 
-  typescript-eslint@8.36.0(eslint@9.30.1)(typescript@5.8.3):
+  typescript-eslint@8.46.0(eslint@9.38.0)(typescript@5.8.3):
     dependencies:
-      '@typescript-eslint/eslint-plugin': 8.36.0(@typescript-eslint/parser@8.36.0(eslint@9.30.1)(typescript@5.8.3))(eslint@9.30.1)(typescript@5.8.3)
-      '@typescript-eslint/parser': 8.36.0(eslint@9.30.1)(typescript@5.8.3)
-      '@typescript-eslint/utils': 8.36.0(eslint@9.30.1)(typescript@5.8.3)
-      eslint: 9.30.1
+      '@typescript-eslint/eslint-plugin': 8.46.0(@typescript-eslint/parser@8.46.0(eslint@9.38.0)(typescript@5.8.3))(eslint@9.38.0)(typescript@5.8.3)
+      '@typescript-eslint/parser': 8.46.0(eslint@9.38.0)(typescript@5.8.3)
+      '@typescript-eslint/typescript-estree': 8.46.0(typescript@5.8.3)
+      '@typescript-eslint/utils': 8.46.0(eslint@9.38.0)(typescript@5.8.3)
+      eslint: 9.38.0
       typescript: 5.8.3
     transitivePeerDependencies:
       - supports-color
@@ -2565,7 +2910,7 @@ snapshots:
       has-symbols: 1.1.0
       which-boxed-primitive: 1.1.1
 
-  undici-types@7.8.0: {}
+  undici-types@7.14.0: {}
 
   unicorn-magic@0.3.0: {}
 
@@ -2594,7 +2939,7 @@ snapshots:
       is-async-function: 2.1.1
       is-date-object: 1.1.0
       is-finalizationregistry: 1.1.1
-      is-generator-function: 1.1.0
+      is-generator-function: 1.1.2
       is-regex: 1.2.1
       is-weakref: 1.1.1
       isarray: 2.0.5
@@ -2631,4 +2976,4 @@ snapshots:
 
   yocto-queue@0.1.0: {}
 
-  yoctocolors@2.1.1: {}
+  yoctocolors@2.1.2: {}
diff --git a/packages/carmel-tools/cardcom-integration/src/cardcom-integration.ts b/packages/carmel-tools/cardcom-integration/src/cardcom-integration.ts
index ee765f8..b35e80a 100644
--- a/packages/carmel-tools/cardcom-integration/src/cardcom-integration.ts
+++ b/packages/carmel-tools/cardcom-integration/src/cardcom-integration.ts
@@ -4,6 +4,7 @@ import type {
   RecurringPaymentInfo,
   BadPayment,
 } from '@giltayar/carmel-tools-cardcom-integration/types'
+import {fetchAsJsonWithJsonBody} from '@giltayar/http-commons'
 
 export interface CardcomIntegrationServiceContext {
   apiKey: string
@@ -22,6 +23,8 @@ export function createCardcomIntegrationService(context: CardcomIntegrationServi
     enableDisableRecurringPayment: sBind(enableDisableRecurringPayment),
     fetchRecurringPaymentInformation: sBind(fetchRecurringPaymentInformation),
     fetchRecurringPaymentBadPayments: sBind(fetchRecurringPaymentBadPayments),
+    createTaxInvoice: sBind(createTaxInvoice),
+    createTaxInvoiceDocumentUrl: sBind(createTaxInvoiceDocumentUrl),
   }
 }
 
@@ -64,6 +67,76 @@ export async function enableDisableRecurringPayment(
   }
 }
 
+// More information here: https://cardcomapi.zendesk.com/hc/he/articles/25360043043602-%D7%99%D7%A6%D7%99%D7%A8%D7%AA-%D7%97%D7%A9%D7%91%D7%95%D7%A0%D7%99%D7%95%D7%AA-Create-Tax-invoice
+// And here:https://secure.cardcom.solutions/Api/v11/Docs#tag/Documents/operation/Documents_CreateTaxInvoice
+export async function createTaxInvoice(
+  s: CardcomIntegrationServiceData,
+  invoiceInformation: {
+    customerName: string
+    customerEmail: string
+    cardcomCustomerId: number | undefined
+    productsSold: {
+      productId: string
+      productName: string
+      quantity: number
+      unitPriceInCents: number
+    }[]
+    transactionDate: Date
+    transactionDescription: string | undefined
+  },
+  options: {
+    sendInvoiceByMail: boolean
+  },
+) {
+  const url = new URL('https://secure.cardcom.solutions/api/v11/Documents/CreateTaxInvoice')
+
+  const result = (await fetchAsJsonWithJsonBody(url, {
+    ApiName: s.context.apiKey,
+    ApiPassword: s.context.apiKeyPassword,
+    InvoiceType: 1, // חשבונית מס קבלה
+    InvoiceHead: {
+      CustName: invoiceInformation.customerName,
+      Email: invoiceInformation.customerEmail,
+      SendByEmail: options.sendInvoiceByMail,
+      ...(invoiceInformation.cardcomCustomerId
+        ? {AccountID: invoiceInformation.cardcomCustomerId}
+        : {}),
+    },
+    InvoiceLines: invoiceInformation.productsSold.map((ps) => ({
+      ProductID: ps.productId,
+      Description: ps.productName,
+      Quantity: ps.quantity,
+      Price: ps.unitPriceInCents / 100,
+    })),
+    CustomLines: {
+      TranDate: invoiceInformation.transactionDate.toISOString(),
+      Description: invoiceInformation.transactionDescription ?? '',
+    },
+  })) as {InvoiceNumber: number; InvoiceLink: string; AccountID: string}
+
+  return {
+    cardcomInvoiceNumber: result.InvoiceNumber,
+    cardcomDocumentLink: result.InvoiceLink,
+    cardcomCustomerId: result.AccountID,
+  }
+}
+
+export async function createTaxInvoiceDocumentUrl(
+  s: CardcomIntegrationServiceData,
+  cardcomInvoiceNumber: string,
+) {
+  const url = new URL('https://secure.cardcom.solutions/api/v11/Documents/CreateDocumentUrl')
+
+  const result = (await fetchAsJsonWithJsonBody(url, {
+    ApiName: s.context.apiKey,
+    ApiPassword: s.context.apiKeyPassword,
+    DocumentType: 'TaxInvoiceAndReceipt',
+    DocumentNumber: cardcomInvoiceNumber,
+  })) as {DocUrl: string}
+
+  return {url: result.DocUrl}
+}
+
 export async function fetchRecurringPaymentInformation(
   s: CardcomIntegrationServiceData,
   accountId: string,
